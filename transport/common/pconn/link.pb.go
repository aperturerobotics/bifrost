// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/transport/common/pconn/link.proto

package pconn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// PacketType is a one-byte header indicating the type of packet.
// TODO: implement MSBs holding conversation ID.
type PacketType int32

const (
	PacketType_PacketType_HANDSHAKE PacketType = 0
	PacketType_PacketType_RAW       PacketType = 1
	PacketType_PacketType_KCP_SMUX  PacketType = 2
)

var PacketType_name = map[int32]string{
	0: "PacketType_HANDSHAKE",
	1: "PacketType_RAW",
	2: "PacketType_KCP_SMUX",
}
var PacketType_value = map[string]int32{
	"PacketType_HANDSHAKE": 0,
	"PacketType_RAW":       1,
	"PacketType_KCP_SMUX":  2,
}

func (x PacketType) String() string {
	return proto.EnumName(PacketType_name, int32(x))
}
func (PacketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_link_3680a8decceb0ec6, []int{0}
}

// LinkInfo is information about a UDP link.
type LinkInfo struct {
	// SourceAddr is the listener address.
	SourceAddr string `protobuf:"bytes,1,opt,name=source_addr,json=sourceAddr" json:"source_addr,omitempty"`
	// DestAddr is the destination address.
	DestAddr             string   `protobuf:"bytes,2,opt,name=dest_addr,json=destAddr" json:"dest_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkInfo) Reset()         { *m = LinkInfo{} }
func (m *LinkInfo) String() string { return proto.CompactTextString(m) }
func (*LinkInfo) ProtoMessage()    {}
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_link_3680a8decceb0ec6, []int{0}
}
func (m *LinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkInfo.Unmarshal(m, b)
}
func (m *LinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkInfo.Marshal(b, m, deterministic)
}
func (dst *LinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkInfo.Merge(dst, src)
}
func (m *LinkInfo) XXX_Size() int {
	return xxx_messageInfo_LinkInfo.Size(m)
}
func (m *LinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LinkInfo proto.InternalMessageInfo

func (m *LinkInfo) GetSourceAddr() string {
	if m != nil {
		return m.SourceAddr
	}
	return ""
}

func (m *LinkInfo) GetDestAddr() string {
	if m != nil {
		return m.DestAddr
	}
	return ""
}

func init() {
	proto.RegisterType((*LinkInfo)(nil), "pconn.LinkInfo")
	proto.RegisterEnum("pconn.PacketType", PacketType_name, PacketType_value)
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/transport/common/pconn/link.proto", fileDescriptor_link_3680a8decceb0ec6)
}

var fileDescriptor_link_3680a8decceb0ec6 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xce, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0xc6, 0x71, 0x53, 0x50, 0xda, 0x11, 0x24, 0xac, 0x82, 0x05, 0x0f, 0x8a, 0x27, 0xf1, 0xd0,
	0x3d, 0xf8, 0x09, 0x16, 0x2d, 0x44, 0xaa, 0x52, 0x1a, 0x45, 0x6f, 0x61, 0xdf, 0xaa, 0x4b, 0xcc,
	0xce, 0x32, 0x3b, 0x39, 0xf8, 0xed, 0xa5, 0xe9, 0xa1, 0x39, 0x3e, 0xff, 0xdf, 0xe5, 0x81, 0xe5,
	0x77, 0xe0, 0x9f, 0xde, 0x2c, 0x2c, 0x76, 0x52, 0x27, 0x4f, 0xdc, 0x93, 0x27, 0x34, 0xc8, 0xc1,
	0x66, 0x69, 0xc2, 0x96, 0x30, 0xb3, 0x64, 0xd2, 0x31, 0x27, 0x24, 0x96, 0x16, 0xbb, 0x0e, 0xa3,
	0x4c, 0x16, 0x63, 0x94, 0xbf, 0x21, 0xb6, 0x8b, 0x44, 0xc8, 0x28, 0x8e, 0x87, 0x72, 0x5b, 0xc1,
	0xf4, 0x25, 0xc4, 0xf6, 0x39, 0x6e, 0x51, 0x5c, 0xc3, 0x69, 0xc6, 0x9e, 0xac, 0x6f, 0xb4, 0x73,
	0x34, 0x2f, 0x6e, 0x8a, 0xbb, 0xd9, 0x06, 0xf6, 0x49, 0x39, 0x47, 0xe2, 0x0a, 0x66, 0xce, 0x67,
	0xde, 0xf3, 0x64, 0xe0, 0xe9, 0x2e, 0xec, 0xf0, 0xbe, 0x06, 0x58, 0x6b, 0xdb, 0x7a, 0x7e, 0xff,
	0x4b, 0x5e, 0xcc, 0xe1, 0xe2, 0xb0, 0x9a, 0x4a, 0xbd, 0x3d, 0xd5, 0x95, 0x5a, 0x2d, 0xcb, 0x23,
	0x21, 0xe0, 0x6c, 0x24, 0x1b, 0xf5, 0x59, 0x16, 0xe2, 0x12, 0xce, 0x47, 0x6d, 0xf5, 0xb8, 0x6e,
	0xea, 0xd7, 0x8f, 0xaf, 0x72, 0x62, 0x4e, 0x86, 0xb3, 0x0f, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x39, 0x75, 0xb9, 0xb2, 0xf5, 0x00, 0x00, 0x00,
}
