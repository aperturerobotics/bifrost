syntax = "proto3";
package websocket;

import "github.com/aperturerobotics/bifrost/transport/common/quic/quic.proto";
import "github.com/aperturerobotics/bifrost/transport/common/dialer/dialer.proto";

// Config is the configuration for the Websocket transport.
//
// Bifrost speaks Quic over the websocket. While this is not always necessary,
// especially when using wss transports, we still need to ensure end-to-end
// encryption to the peer that we handshake with on the other end, and to manage
// stream congestion control, multiplexing,
message Config {
  // TransportPeerID sets the peer ID to attach the transport to.
  // If unset, attaches to any running peer with a private key.
  string transport_peer_id = 1;
  // ListenAddr contains the address to listen on.
  // Has no effect in the browser.
  string listen_addr = 2;
  // Quic contains the quic protocol options.
  //
  // The WebSocket transport always disables FEC and several other UDP-centric
  // features which are unnecessary due to the "reliable" nature of WebSockets.
  .transport.quic.Opts quic = 3;
  // Dialers maps peer IDs to dialers.
  map<string, .dialer.DialerOpts> dialers = 4;
  // HttpPath is the http path to expose the websocket.
  // If unset, ignores the incoming request path.
  string http_path = 5;
}
