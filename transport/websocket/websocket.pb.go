// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/transport/websocket/websocket.proto

package websocket

import (
	fmt "fmt"
	dialer "github.com/aperturerobotics/bifrost/transport/common/dialer"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config is the configuration for the websocket transport.
type Config struct {
	// NodePeerID constrains the node peer ID.
	// If empty, attaches to whatever node is running.
	NodePeerId string `protobuf:"bytes,1,opt,name=node_peer_id,json=nodePeerId,proto3" json:"node_peer_id,omitempty"`
	// ListenAddr contains the address to listen on.
	// Has no effect in the browser.
	ListenAddr string `protobuf:"bytes,2,opt,name=listen_addr,json=listenAddr,proto3" json:"listen_addr,omitempty"`
	// Dialers maps peer IDs to websocket addresses.
	Dialers              map[string]*dialer.DialerOpts `protobuf:"bytes,5,rep,name=dialers,proto3" json:"dialers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd1c0afc3d9a579c, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetNodePeerId() string {
	if m != nil {
		return m.NodePeerId
	}
	return ""
}

func (m *Config) GetListenAddr() string {
	if m != nil {
		return m.ListenAddr
	}
	return ""
}

func (m *Config) GetDialers() map[string]*dialer.DialerOpts {
	if m != nil {
		return m.Dialers
	}
	return nil
}

// HandshakeExtraData contains the extra data field of the pconn handshake.
type HandshakeExtraData struct {
	// LocalTransportUuid is the transport uuid of the sender.
	// This is used for monitoring / analysis at a later time.
	// Coorelates the transport connections between two machines.
	LocalTransportUuid   uint64   `protobuf:"varint,1,opt,name=local_transport_uuid,json=localTransportUuid,proto3" json:"local_transport_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeExtraData) Reset()         { *m = HandshakeExtraData{} }
func (m *HandshakeExtraData) String() string { return proto.CompactTextString(m) }
func (*HandshakeExtraData) ProtoMessage()    {}
func (*HandshakeExtraData) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd1c0afc3d9a579c, []int{1}
}

func (m *HandshakeExtraData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeExtraData.Unmarshal(m, b)
}
func (m *HandshakeExtraData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeExtraData.Marshal(b, m, deterministic)
}
func (m *HandshakeExtraData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeExtraData.Merge(m, src)
}
func (m *HandshakeExtraData) XXX_Size() int {
	return xxx_messageInfo_HandshakeExtraData.Size(m)
}
func (m *HandshakeExtraData) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeExtraData.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeExtraData proto.InternalMessageInfo

func (m *HandshakeExtraData) GetLocalTransportUuid() uint64 {
	if m != nil {
		return m.LocalTransportUuid
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "websocket.Config")
	proto.RegisterMapType((map[string]*dialer.DialerOpts)(nil), "websocket.Config.DialersEntry")
	proto.RegisterType((*HandshakeExtraData)(nil), "websocket.HandshakeExtraData")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/transport/websocket/websocket.proto", fileDescriptor_fd1c0afc3d9a579c)
}

var fileDescriptor_fd1c0afc3d9a579c = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x50, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x4d, 0x41, 0x30, 0x2c, 0x1c, 0xcc, 0xc6, 0x03, 0xe1, 0xa0, 0x84, 0x13, 0xa7, 0xd6, 0xe0,
	0x85, 0x78, 0x33, 0x82, 0xe2, 0x45, 0x4d, 0xa3, 0xe7, 0x66, 0xdb, 0x1d, 0x60, 0x43, 0xd9, 0x69,
	0x66, 0xa7, 0x2a, 0x1f, 0xea, 0xff, 0x18, 0xba, 0x05, 0xb9, 0x7a, 0xda, 0xc9, 0x7b, 0x6f, 0xdf,
	0xcc, 0x7b, 0xe2, 0x69, 0x65, 0x78, 0x5d, 0xa6, 0x61, 0x86, 0xdb, 0x48, 0x15, 0x40, 0x5c, 0x12,
	0x10, 0xa6, 0xc8, 0x26, 0x73, 0x51, 0x6a, 0x96, 0x84, 0x8e, 0x23, 0x26, 0x65, 0x5d, 0x81, 0xc4,
	0xd1, 0x17, 0xa4, 0x0e, 0xb3, 0x0d, 0x9c, 0x4c, 0x61, 0x41, 0xc8, 0x28, 0x3b, 0x47, 0x60, 0xb0,
	0xf8, 0x9f, 0x67, 0x86, 0xdb, 0x2d, 0xda, 0x48, 0x1b, 0x95, 0x03, 0xd5, 0x8f, 0x37, 0x1d, 0xfd,
	0x04, 0xa2, 0xfd, 0x80, 0x76, 0x69, 0x56, 0x72, 0x28, 0x7a, 0x16, 0x35, 0x24, 0x05, 0x00, 0x25,
	0x46, 0xf7, 0x83, 0x61, 0x30, 0xee, 0xc4, 0x62, 0x8f, 0xbd, 0x01, 0xd0, 0xb3, 0x96, 0xd7, 0xa2,
	0x9b, 0x1b, 0xc7, 0x60, 0x13, 0xa5, 0x35, 0xf5, 0x1b, 0x5e, 0xe0, 0xa1, 0x7b, 0xad, 0x49, 0x4e,
	0xc5, 0xb9, 0x77, 0x77, 0xfd, 0xd6, 0xb0, 0x39, 0xee, 0x4e, 0xae, 0xc2, 0xbf, 0x14, 0x7e, 0x4d,
	0x38, 0xf3, 0x82, 0xb9, 0x65, 0xda, 0xc5, 0x07, 0xf9, 0xe0, 0x45, 0xf4, 0x4e, 0x09, 0x79, 0x21,
	0x9a, 0x1b, 0xd8, 0xd5, 0x37, 0xec, 0x47, 0x39, 0x16, 0xad, 0x4f, 0x95, 0x97, 0x50, 0xad, 0xed,
	0x4e, 0x64, 0x58, 0xe7, 0xf0, 0xdf, 0x5e, 0x0b, 0x76, 0xb1, 0x17, 0xdc, 0x35, 0xa6, 0xc1, 0xe8,
	0x51, 0xc8, 0x85, 0xb2, 0xda, 0xad, 0xd5, 0x06, 0xe6, 0xdf, 0x4c, 0x6a, 0xa6, 0x58, 0xc9, 0x1b,
	0x71, 0x99, 0x63, 0xa6, 0xf2, 0xe4, 0xd8, 0x4d, 0x52, 0x96, 0x75, 0xd4, 0xb3, 0x58, 0x56, 0xdc,
	0xfb, 0x81, 0xfa, 0x28, 0x8d, 0x4e, 0xdb, 0x55, 0x4d, 0xb7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xb4, 0xf7, 0x77, 0x42, 0xc6, 0x01, 0x00, 0x00,
}
