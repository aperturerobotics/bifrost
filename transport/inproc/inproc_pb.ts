// @generated by protoc-gen-es-lite unknown with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/bifrost/transport/inproc/inproc.proto (package inproc, syntax proto3)
/* eslint-disable */

import {
  createMessageType,
  Message,
  MessageType,
  PartialFieldInfo,
} from '@aptre/protobuf-es-lite'
import { Opts } from '../common/pconn/pconn_pb.js'
import { DialerOpts } from '../common/dialer/dialer_pb.js'

export const protobufPackage = 'inproc'

/**
 * Config is the configuration for the inproc testing transport.
 *
 * @generated from message inproc.Config
 */
export interface Config extends Message<Config> {
  /**
   * TransportPeerID sets the peer ID to attach the transport to.
   * If unset, attaches to any running peer with a private key.
   *
   * @generated from field: string transport_peer_id = 1;
   */
  transportPeerId?: string
  /**
   * PacketOpts are options to set on the packet connection.
   *
   * @generated from field: pconn.Opts packet_opts = 2;
   */
  packetOpts?: Opts
  /**
   * Dialers maps peer IDs to dialers.
   *
   * @generated from field: map<string, dialer.DialerOpts> dialers = 3;
   */
  dialers?: { [key: string]: DialerOpts }
}

export const Config: MessageType<Config> = createMessageType({
  typeName: 'inproc.Config',
  fields: [
    {
      no: 1,
      name: 'transport_peer_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 2, name: 'packet_opts', kind: 'message', T: Opts },
    {
      no: 3,
      name: 'dialers',
      kind: 'map',
      K: 9 /* ScalarType.STRING */,
      V: { kind: 'message', T: DialerOpts },
    },
  ] as readonly PartialFieldInfo[],
  packedByDefault: true,
})
