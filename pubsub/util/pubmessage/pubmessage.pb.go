// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/pubsub/util/pubmessage/pubmessage.proto

package pubmessage

import (
	fmt "fmt"
	peer "github.com/aperturerobotics/bifrost/peer"
	timestamp "github.com/aperturerobotics/timestamp"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PubMessageInner is the signed inner portion of the message.
type PubMessageInner struct {
	// Data is the message data.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Channel is the channel.
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	// Timestamp is the message timestamp.
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Salt is a random int32.
	Salt                 uint32   `protobuf:"fixed32,4,opt,name=salt,proto3" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubMessageInner) Reset()         { *m = PubMessageInner{} }
func (m *PubMessageInner) String() string { return proto.CompactTextString(m) }
func (*PubMessageInner) ProtoMessage()    {}
func (*PubMessageInner) Descriptor() ([]byte, []int) {
	return fileDescriptor_2697e6c0aca4d08f, []int{0}
}

func (m *PubMessageInner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubMessageInner.Unmarshal(m, b)
}
func (m *PubMessageInner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubMessageInner.Marshal(b, m, deterministic)
}
func (m *PubMessageInner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubMessageInner.Merge(m, src)
}
func (m *PubMessageInner) XXX_Size() int {
	return xxx_messageInfo_PubMessageInner.Size(m)
}
func (m *PubMessageInner) XXX_DiscardUnknown() {
	xxx_messageInfo_PubMessageInner.DiscardUnknown(m)
}

var xxx_messageInfo_PubMessageInner proto.InternalMessageInfo

func (m *PubMessageInner) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PubMessageInner) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *PubMessageInner) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PubMessageInner) GetSalt() uint32 {
	if m != nil {
		return m.Salt
	}
	return 0
}

// PubMessage is a message published via the pubsub channel.
type PubMessage struct {
	// FromPeerId is the peer identifier of the sender.
	FromPeerId string `protobuf:"bytes,1,opt,name=from_peer_id,json=fromPeerId,proto3" json:"from_peer_id,omitempty"`
	// Signature is the sender signature.
	// Should not contain PubKey, which is inferred from peer id.
	Signature *peer.Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// Data is the PubMessageInner data.
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubMessage) Reset()         { *m = PubMessage{} }
func (m *PubMessage) String() string { return proto.CompactTextString(m) }
func (*PubMessage) ProtoMessage()    {}
func (*PubMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2697e6c0aca4d08f, []int{1}
}

func (m *PubMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PubMessage.Unmarshal(m, b)
}
func (m *PubMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PubMessage.Marshal(b, m, deterministic)
}
func (m *PubMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubMessage.Merge(m, src)
}
func (m *PubMessage) XXX_Size() int {
	return xxx_messageInfo_PubMessage.Size(m)
}
func (m *PubMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PubMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PubMessage proto.InternalMessageInfo

func (m *PubMessage) GetFromPeerId() string {
	if m != nil {
		return m.FromPeerId
	}
	return ""
}

func (m *PubMessage) GetSignature() *peer.Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *PubMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PubMessageInner)(nil), "pubmessage.PubMessageInner")
	proto.RegisterType((*PubMessage)(nil), "pubmessage.PubMessage")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/pubsub/util/pubmessage/pubmessage.proto", fileDescriptor_2697e6c0aca4d08f)
}

var fileDescriptor_2697e6c0aca4d08f = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x6a, 0xf3, 0x30,
	0x10, 0x85, 0xd1, 0x9f, 0xf0, 0x07, 0x4f, 0x02, 0x01, 0xd1, 0x85, 0xc9, 0xca, 0x64, 0xe5, 0x4d,
	0x6d, 0x70, 0xe8, 0x21, 0x42, 0x29, 0x04, 0xb5, 0xfb, 0x20, 0xd9, 0x13, 0x47, 0x60, 0x5b, 0xae,
	0x34, 0x3a, 0x43, 0xaf, 0x5d, 0x2c, 0xe3, 0xa8, 0xab, 0xd2, 0x8d, 0xf8, 0x34, 0xcc, 0xcc, 0x7b,
	0x6f, 0xe0, 0xb5, 0xd5, 0x74, 0xf7, 0xaa, 0xa8, 0x4d, 0x5f, 0xca, 0x11, 0x2d, 0x79, 0x8b, 0xd6,
	0x28, 0x43, 0xba, 0x76, 0xa5, 0xd2, 0x37, 0x6b, 0x1c, 0x95, 0xa3, 0x57, 0xce, 0xab, 0xd2, 0x93,
	0xee, 0x26, 0xee, 0xd1, 0x39, 0xd9, 0xe2, 0x0f, 0x2c, 0x46, 0x6b, 0xc8, 0x70, 0x88, 0x95, 0xc3,
	0xe9, 0x4f, 0x8b, 0x11, 0x6d, 0x78, 0xe6, 0x05, 0x87, 0x97, 0xdf, 0x86, 0x48, 0xf7, 0xe8, 0x48,
	0xf6, 0x63, 0xa4, 0x79, 0xec, 0xf8, 0xc5, 0x60, 0x7f, 0xf1, 0xea, 0x6d, 0x96, 0x3e, 0x0f, 0x03,
	0x5a, 0xce, 0x61, 0xdd, 0x48, 0x92, 0x29, 0xcb, 0x58, 0xbe, 0x13, 0x81, 0x79, 0x0a, 0x9b, 0xfa,
	0x2e, 0x87, 0x01, 0xbb, 0xf4, 0x5f, 0xc6, 0xf2, 0x44, 0x2c, 0x5f, 0x5e, 0x41, 0xf2, 0x58, 0x9a,
	0xae, 0x32, 0x96, 0x6f, 0xab, 0xa7, 0x22, 0xca, 0x7c, 0x2c, 0x24, 0x62, 0xdb, 0xa4, 0xe0, 0x64,
	0x47, 0xe9, 0x3a, 0x63, 0xf9, 0x46, 0x04, 0x3e, 0x7e, 0x02, 0x44, 0x23, 0x3c, 0x83, 0xdd, 0xcd,
	0x9a, 0xfe, 0x3a, 0x25, 0xbc, 0xea, 0x26, 0x78, 0x49, 0x04, 0x4c, 0xb5, 0x0b, 0xa2, 0x3d, 0x37,
	0xfc, 0x19, 0x12, 0xa7, 0xdb, 0x41, 0x4e, 0x41, 0x83, 0xa7, 0x6d, 0xb5, 0x2f, 0xc2, 0x41, 0xde,
	0x97, 0xb2, 0x88, 0x1d, 0x8f, 0x50, 0xab, 0x18, 0x4a, 0xfd, 0x0f, 0x37, 0x38, 0x7d, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xaa, 0x61, 0x60, 0x51, 0xca, 0x01, 0x00, 0x00,
}
