syntax = "proto3";
package nats;

import "github.com/aperturerobotics/bifrost/peer/peer.proto";
import "github.com/aperturerobotics/bifrost/hash/hash.proto";
import "github.com/aperturerobotics/timestamp/timestamp.proto";

// NatsConnType indicates the type of nats conn a stream represents.
enum NatsConnType {
  // NatsConnType_UNKNOWN is the unknown type.
  NatsConnType_UNKNOWN = 0;
  // NatsConnType_CLIENT is the client connection type.
  NatsConnType_CLIENT = 1;
  // NatsConnType_ROUTER is the router-router connection type.
  NatsConnType_ROUTER = 2;
  // TODO other types
}

// Config configures the nats router, hosting a nats.io routing node.
// This uses nats 2.0 accounts - an Account maps to a Peer.
message Config {
  // Trace turns on trace mode for logging.
  bool trace = 1;
  // ClusterName is the cluster ID string to use.
  // This must be the same on all nodes.
  // If unset, uses the protocol ID.
  string cluster_name = 2;
}

// PubMessageInner is the signed inner portion of the message.
message PubMessageInner {
  // Data is the message data.
	bytes data = 1;
  // Channel is the channel.
  string channel = 2;
  // Timestamp is the message timestamp.
  timestamp.Timestamp timestamp = 3;
  // Salt is a random int32.
  fixed32 salt = 4;
}

// PubMessage is a message published via the pubsub channel.
message PubMessage {
  // FromPeerId is the peer identifier of the sender.
	string from_peer_id = 1;
  // Signature is the sender signature.
  // Should not contain PubKey, which is inferred from peer id.
  peer.Signature signature = 2;
  // Data is the PubMessageInner data.
  bytes data = 3;
}

