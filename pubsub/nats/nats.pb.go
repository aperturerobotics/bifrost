// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0-devel
// 	protoc        v4.25.1
// source: github.com/aperturerobotics/bifrost/pubsub/nats/nats.proto

package nats

import (
	reflect "reflect"
	sync "sync"

	hash "github.com/aperturerobotics/bifrost/hash"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NatsConnType indicates the type of nats conn a stream represents.
type NatsConnType int32

const (
	// NatsConnType_UNKNOWN is the unknown type.
	NatsConnType_NatsConnType_UNKNOWN NatsConnType = 0
	// NatsConnType_CLIENT is the client connection type.
	NatsConnType_NatsConnType_CLIENT NatsConnType = 1
	// NatsConnType_ROUTER is the router-router connection type.
	NatsConnType_NatsConnType_ROUTER NatsConnType = 2 // TODO other types
)

// Enum value maps for NatsConnType.
var (
	NatsConnType_name = map[int32]string{
		0: "NatsConnType_UNKNOWN",
		1: "NatsConnType_CLIENT",
		2: "NatsConnType_ROUTER",
	}
	NatsConnType_value = map[string]int32{
		"NatsConnType_UNKNOWN": 0,
		"NatsConnType_CLIENT":  1,
		"NatsConnType_ROUTER":  2,
	}
)

func (x NatsConnType) Enum() *NatsConnType {
	p := new(NatsConnType)
	*p = x
	return p
}

func (x NatsConnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NatsConnType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_enumTypes[0].Descriptor()
}

func (NatsConnType) Type() protoreflect.EnumType {
	return &file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_enumTypes[0]
}

func (x NatsConnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NatsConnType.Descriptor instead.
func (NatsConnType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescGZIP(), []int{0}
}

// Config configures the nats router, hosting a nats.io routing node.
// This uses nats 2.0 accounts - an Account maps to a Peer.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClusterName is the cluster ID string to use.
	// This must be the same on all nodes.
	// If unset, uses the protocol ID.
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// PublishHashType is the hash type to use when signing published messages.
	// Defaults to sha256
	PublishHashType hash.HashType `protobuf:"varint,2,opt,name=publish_hash_type,json=publishHashType,proto3,enum=hash.HashType" json:"publish_hash_type,omitempty"`
	// LogDebug turns on extended debugging logging.
	LogDebug bool `protobuf:"varint,3,opt,name=log_debug,json=logDebug,proto3" json:"log_debug,omitempty"`
	// LogTrace turns on tracing logging.
	// implies log_debug.
	LogTrace bool `protobuf:"varint,4,opt,name=log_trace,json=logTrace,proto3" json:"log_trace,omitempty"`
	// LogTraceVrebose turns on verbose tracing logging.
	// Implies log_trace and log_debug.
	LogTraceVerbose bool `protobuf:"varint,5,opt,name=log_trace_verbose,json=logTraceVerbose,proto3" json:"log_trace_verbose,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Config) GetPublishHashType() hash.HashType {
	if x != nil {
		return x.PublishHashType
	}
	return hash.HashType(0)
}

func (x *Config) GetLogDebug() bool {
	if x != nil {
		return x.LogDebug
	}
	return false
}

func (x *Config) GetLogTrace() bool {
	if x != nil {
		return x.LogTrace
	}
	return false
}

func (x *Config) GetLogTraceVerbose() bool {
	if x != nil {
		return x.LogTraceVerbose
	}
	return false
}

var File_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto protoreflect.FileDescriptor

var file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x62, 0x69,
	0x66, 0x72, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2f, 0x6e, 0x61, 0x74,
	0x73, 0x2f, 0x6e, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6e, 0x61,
	0x74, 0x73, 0x1a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x70, 0x65, 0x72, 0x74, 0x75, 0x72, 0x65, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f,
	0x62, 0x69, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x2f, 0x68, 0x61, 0x73,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x6f, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x2a, 0x5a, 0x0a, 0x0c, 0x4e, 0x61, 0x74, 0x73, 0x43,
	0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x61, 0x74, 0x73, 0x43,
	0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x61,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45,
	0x52, 0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescOnce sync.Once
	file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescData = file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDesc
)

func file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescGZIP() []byte {
	file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescOnce.Do(func() {
		file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescData)
	})
	return file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDescData
}

var file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_goTypes = []interface{}{
	(NatsConnType)(0),  // 0: nats.NatsConnType
	(*Config)(nil),     // 1: nats.Config
	(hash.HashType)(0), // 2: hash.HashType
}
var file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_depIdxs = []int32{
	2, // 0: nats.Config.publish_hash_type:type_name -> hash.HashType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_init() }
func file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_init() {
	if File_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_goTypes,
		DependencyIndexes: file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_depIdxs,
		EnumInfos:         file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_enumTypes,
		MessageInfos:      file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_msgTypes,
	}.Build()
	File_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto = out.File
	file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_rawDesc = nil
	file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_goTypes = nil
	file_github_com_aperturerobotics_bifrost_pubsub_nats_nats_proto_depIdxs = nil
}
