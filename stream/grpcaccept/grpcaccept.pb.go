// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/stream/grpcaccept/grpcaccept.proto

package stream_grpcaccept

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Config configures the grpcaccept controller.
type Config struct {
	// LocalPeerId is the peer ID to accept incoming connections with.
	// Can be empty to accept any peer.
	LocalPeerId string `protobuf:"bytes,1,opt,name=local_peer_id,json=localPeerId" json:"local_peer_id,omitempty"`
	// RemotePeerIds are peer IDs to accept incoming connections from.
	// Can be empty to accept any remote peer IDs.
	RemotePeerIds []string `protobuf:"bytes,2,rep,name=remote_peer_ids,json=remotePeerIds" json:"remote_peer_ids,omitempty"`
	// ProtocolId is the protocol ID to accept.
	ProtocolId string `protobuf:"bytes,3,opt,name=protocol_id,json=protocolId" json:"protocol_id,omitempty"`
	// TransportId constrains the transport ID to accept from.
	// Can be empty.
	TransportId          uint64   `protobuf:"varint,4,opt,name=transport_id,json=transportId" json:"transport_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcaccept_4a5b3c4efeb87824, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetLocalPeerId() string {
	if m != nil {
		return m.LocalPeerId
	}
	return ""
}

func (m *Config) GetRemotePeerIds() []string {
	if m != nil {
		return m.RemotePeerIds
	}
	return nil
}

func (m *Config) GetProtocolId() string {
	if m != nil {
		return m.ProtocolId
	}
	return ""
}

func (m *Config) GetTransportId() uint64 {
	if m != nil {
		return m.TransportId
	}
	return 0
}

// Request is a request packet.
type Request struct {
	// Data is packet data from the remote.
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcaccept_4a5b3c4efeb87824, []int{1}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Response is a response packet.
type Response struct {
	// Data is packet data from the remote.
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpcaccept_4a5b3c4efeb87824, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "stream.grpcaccept.Config")
	proto.RegisterType((*Request)(nil), "stream.grpcaccept.Request")
	proto.RegisterType((*Response)(nil), "stream.grpcaccept.Response")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/stream/grpcaccept/grpcaccept.proto", fileDescriptor_grpcaccept_4a5b3c4efeb87824)
}

var fileDescriptor_grpcaccept_4a5b3c4efeb87824 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8e, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0x15, 0x5a, 0x15, 0x3a, 0x69, 0x85, 0xf0, 0xaa, 0x1b, 0x20, 0x64, 0x81, 0xb2, 0x4a,
	0x16, 0x1c, 0x01, 0x09, 0x29, 0x3b, 0xe4, 0x0b, 0x54, 0x8e, 0x3d, 0x0d, 0x96, 0x92, 0x8c, 0x19,
	0x4f, 0xee, 0xc2, 0x71, 0x51, 0x1d, 0x15, 0x58, 0xb0, 0x1b, 0xbd, 0xff, 0xf4, 0xff, 0xc0, 0x5b,
	0xef, 0xe5, 0x63, 0xee, 0x6a, 0x4b, 0x63, 0x63, 0x02, 0xb2, 0xcc, 0x8c, 0x4c, 0x1d, 0x89, 0xb7,
	0xb1, 0xe9, 0xfc, 0x89, 0x29, 0x4a, 0x13, 0x85, 0xd1, 0x8c, 0x4d, 0xcf, 0xc1, 0x1a, 0x6b, 0x31,
	0xc8, 0x9f, 0xb3, 0x0e, 0x4c, 0x42, 0xea, 0x6e, 0x71, 0xea, 0xdf, 0xa0, 0xfc, 0xca, 0x60, 0xf3,
	0x4a, 0xd3, 0xc9, 0xf7, 0xaa, 0x84, 0xfd, 0x40, 0xd6, 0x0c, 0xc7, 0x80, 0xc8, 0x47, 0xef, 0x0e,
	0x59, 0x91, 0x55, 0x5b, 0x9d, 0x27, 0xf8, 0x8e, 0xc8, 0xad, 0x53, 0xcf, 0x70, 0xcb, 0x38, 0x92,
	0xe0, 0x45, 0x8a, 0x87, 0xab, 0x62, 0x55, 0x6d, 0xf5, 0x7e, 0xc1, 0x8b, 0x16, 0xd5, 0x23, 0xe4,
	0x69, 0xd2, 0xd2, 0x70, 0x6e, 0x5a, 0xa5, 0x26, 0xb8, 0xa0, 0xd6, 0xa9, 0x27, 0xd8, 0x09, 0x9b,
	0x29, 0x06, 0x62, 0x39, 0x1b, 0xeb, 0x22, 0xab, 0xd6, 0x3a, 0xff, 0x61, 0xad, 0x2b, 0xef, 0xe1,
	0x5a, 0xe3, 0xe7, 0x8c, 0x51, 0x94, 0x82, 0xb5, 0x33, 0x62, 0xd2, 0x47, 0x3b, 0x9d, 0xee, 0xf2,
	0x01, 0x6e, 0x34, 0xc6, 0x40, 0x53, 0xc4, 0xff, 0xf2, 0x6e, 0x93, 0xd6, 0x5e, 0xbe, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xdf, 0xe4, 0xe7, 0x89, 0x3d, 0x01, 0x00, 0x00,
}
