// @generated by protoc-gen-es-lite unknown with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/bifrost/stream/echo/echo.proto (package stream.echo, syntax proto3)
/* eslint-disable */

import type { MessageType, PartialFieldInfo } from '@aptre/protobuf-es-lite'
import { createMessageType, Message } from '@aptre/protobuf-es-lite'

export const protobufPackage = 'stream.echo'

/**
 * Config configures the echo controller.
 *
 * @generated from message stream.echo.Config
 */
export type Config = Message<{
  /**
   * PeerId is the peer ID to echo for.
   * Can be empty.
   *
   * @generated from field: string peer_id = 1;
   */
  peerId?: string
  /**
   * ProtocolId is the protocol ID to echo on.
   *
   * @generated from field: string protocol_id = 2;
   */
  protocolId?: string
}>

export const Config: MessageType<Config> = createMessageType({
  typeName: 'stream.echo.Config',
  fields: [
    { no: 1, name: 'peer_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    {
      no: 2,
      name: 'protocol_id',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
  ] as readonly PartialFieldInfo[],
  packedByDefault: true,
})
