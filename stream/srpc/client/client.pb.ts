// @generated by protoc-gen-es-lite unknown with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/bifrost/stream/srpc/client/client.proto (package stream.srpc.client, syntax proto3)
/* eslint-disable */

import type { MessageType, PartialFieldInfo } from '@aptre/protobuf-es-lite'
import { createMessageType, Message, ScalarType } from '@aptre/protobuf-es-lite'
import { Backoff } from '@go/github.com/aperturerobotics/util/backoff/backoff.pb.js'

export const protobufPackage = 'stream.srpc.client'

/**
 * Config configures a client for a srpc service.
 *
 * @generated from message stream.srpc.client.Config
 */
export type Config = Message<{
  /**
   * ServerPeerIds are the static list of peer IDs to contact.
   *
   * @generated from field: repeated string server_peer_ids = 1;
   */
  serverPeerIds?: string[]
  /**
   * PerServerBackoff is the server peer error backoff configuration.
   * Can be empty.
   *
   * @generated from field: backoff.Backoff per_server_backoff = 2;
   */
  perServerBackoff?: Backoff
  /**
   * SrcPeerId is the source peer id to contact from.
   * Can be empty.
   *
   * @generated from field: string src_peer_id = 3;
   */
  srcPeerId?: string
  /**
   * TransportId restricts which transport we can dial out from.
   *
   * @generated from field: uint64 transport_id = 4;
   */
  transportId?: bigint
  /**
   * TimeoutDur sets the per-server establish timeout.
   * If unset, no timeout.
   * Example: 15s
   *
   * @generated from field: string timeout_dur = 5;
   */
  timeoutDur?: string
}>

// Config contains the message type declaration for Config.
export const Config: MessageType<Config> = createMessageType({
  typeName: 'stream.srpc.client.Config',
  fields: [
    {
      no: 1,
      name: 'server_peer_ids',
      kind: 'scalar',
      T: ScalarType.STRING,
      repeated: true,
    },
    { no: 2, name: 'per_server_backoff', kind: 'message', T: () => Backoff },
    { no: 3, name: 'src_peer_id', kind: 'scalar', T: ScalarType.STRING },
    { no: 4, name: 'transport_id', kind: 'scalar', T: ScalarType.UINT64 },
    { no: 5, name: 'timeout_dur', kind: 'scalar', T: ScalarType.STRING },
  ] as readonly PartialFieldInfo[],
  packedByDefault: true,
})
