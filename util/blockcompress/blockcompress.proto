syntax = "proto3";
package blockcompress;

// BlockCompress sets the type of compression to use.
enum BlockCompress {
  // BlockCompress_NONE indicates no compression.
  BlockCompress_NONE = 0;
  // BlockCompress_SNAPPY indicates Snappy compression.
  BlockCompress_SNAPPY = 1;
  // BlockCompress_S2 indicates S2 compression.
  // 
  // S2 is an extension of snappy. S2 is aimed for high throughput, which is why
  // it features concurrent compression for bigger payloads. Decoding is
  // compatible with Snappy compressed content, but content compressed with S2
  // cannot be decompressed by Snappy. This means that S2 can seamlessly replace
  // Snappy without converting compressed content. S2 is designed to have high
  // throughput on content that cannot be compressed. This is important so you
  // don't have to worry about spending CPU cycles on already compressed data.
  // 
  // Reference: https://github.com/klauspost/compress/tree/master/s2
  BlockCompress_S2 = 2;
  // BlockCompress_LZ4 indicates LZ4 compression.
  BlockCompress_LZ4 = 3;
  // BlockCompress_ZSTD indicates z-standard compression.
  //
  // Zstandard is a real-time compression algorithm, providing high compression
  // ratios. It offers a very wide range of compression / speed trade-off, while
  // being backed by a very fast decoder. A high performance compression
  // algorithm is implemented.
  BlockCompress_ZSTD = 4;
}
