// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.19.3
// source: github.com/aperturerobotics/bifrost/util/backoff/backoff.proto

package backoff

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BackoffKind is the kind of backoff.
type BackoffKind int32

const (
	// BackoffKind_UNKNOWN defaults to BackoffKind_EXPONENTIAL
	BackoffKind_BackoffKind_UNKNOWN BackoffKind = 0
	// BackoffKind_EXPONENTIAL is an exponential backoff.
	BackoffKind_BackoffKind_EXPONENTIAL BackoffKind = 1
	// BackoffKind_CONSTANT is a constant backoff.
	BackoffKind_BackoffKind_CONSTANT BackoffKind = 2
)

// Enum value maps for BackoffKind.
var (
	BackoffKind_name = map[int32]string{
		0: "BackoffKind_UNKNOWN",
		1: "BackoffKind_EXPONENTIAL",
		2: "BackoffKind_CONSTANT",
	}
	BackoffKind_value = map[string]int32{
		"BackoffKind_UNKNOWN":     0,
		"BackoffKind_EXPONENTIAL": 1,
		"BackoffKind_CONSTANT":    2,
	}
)

func (x BackoffKind) Enum() *BackoffKind {
	p := new(BackoffKind)
	*p = x
	return p
}

func (x BackoffKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackoffKind) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_enumTypes[0].Descriptor()
}

func (BackoffKind) Type() protoreflect.EnumType {
	return &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_enumTypes[0]
}

func (x BackoffKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackoffKind.Descriptor instead.
func (BackoffKind) EnumDescriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescGZIP(), []int{0}
}

// Backoff configures a backoff.
type Backoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BackoffKind is the kind of backoff.
	BackoffKind BackoffKind `protobuf:"varint,1,opt,name=backoff_kind,json=backoffKind,proto3,enum=backoff.BackoffKind" json:"backoff_kind,omitempty"`
	// Exponential is the arguments for an exponential backoff.
	Exponential *Exponential `protobuf:"bytes,2,opt,name=exponential,proto3" json:"exponential,omitempty"`
	// Constant is the arugment for a constant backoff.
	Constant *Constant `protobuf:"bytes,3,opt,name=constant,proto3" json:"constant,omitempty"`
}

func (x *Backoff) Reset() {
	*x = Backoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backoff) ProtoMessage() {}

func (x *Backoff) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backoff.ProtoReflect.Descriptor instead.
func (*Backoff) Descriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescGZIP(), []int{0}
}

func (x *Backoff) GetBackoffKind() BackoffKind {
	if x != nil {
		return x.BackoffKind
	}
	return BackoffKind_BackoffKind_UNKNOWN
}

func (x *Backoff) GetExponential() *Exponential {
	if x != nil {
		return x.Exponential
	}
	return nil
}

func (x *Backoff) GetConstant() *Constant {
	if x != nil {
		return x.Constant
	}
	return nil
}

// Exponential is the exponential arguments.
type Exponential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// InitialInterval is the initial interval in milliseconds.
	// Default: 800ms.
	InitialInterval uint32 `protobuf:"varint,1,opt,name=initial_interval,json=initialInterval,proto3" json:"initial_interval,omitempty"`
	// Multiplier is the timing multiplier.
	// Default: 1.8
	Multiplier float32 `protobuf:"fixed32,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	// MaxInterval is the maximum timing interval in milliseconds.
	// Default: 20 seconds
	MaxInterval uint32 `protobuf:"varint,3,opt,name=max_interval,json=maxInterval,proto3" json:"max_interval,omitempty"`
	// RandomizationFactor is the randomization factor.
	// Default: 0
	RandomizationFactor float32 `protobuf:"fixed32,4,opt,name=randomization_factor,json=randomizationFactor,proto3" json:"randomization_factor,omitempty"`
	// MaxElapsedTime if set specifies a maximum time for the backoff, in milliseconds.
	// After this time the backoff and attached process terminates.
	// May be empty, might be ignored.
	MaxElapsedTime uint32 `protobuf:"varint,5,opt,name=max_elapsed_time,json=maxElapsedTime,proto3" json:"max_elapsed_time,omitempty"`
}

func (x *Exponential) Reset() {
	*x = Exponential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exponential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exponential) ProtoMessage() {}

func (x *Exponential) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exponential.ProtoReflect.Descriptor instead.
func (*Exponential) Descriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescGZIP(), []int{1}
}

func (x *Exponential) GetInitialInterval() uint32 {
	if x != nil {
		return x.InitialInterval
	}
	return 0
}

func (x *Exponential) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

func (x *Exponential) GetMaxInterval() uint32 {
	if x != nil {
		return x.MaxInterval
	}
	return 0
}

func (x *Exponential) GetRandomizationFactor() float32 {
	if x != nil {
		return x.RandomizationFactor
	}
	return 0
}

func (x *Exponential) GetMaxElapsedTime() uint32 {
	if x != nil {
		return x.MaxElapsedTime
	}
	return 0
}

// Constant contains constant backoff options.
type Constant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interval is the timing to back off, in milliseconds.
	// Defaults to 5 seconds.
	Interval uint32 `protobuf:"varint,1,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *Constant) Reset() {
	*x = Constant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Constant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constant) ProtoMessage() {}

func (x *Constant) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constant.ProtoReflect.Descriptor instead.
func (*Constant) Descriptor() ([]byte, []int) {
	return file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescGZIP(), []int{2}
}

func (x *Constant) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

var File_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto protoreflect.FileDescriptor

var file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x62, 0x69,
	0x66, 0x72, 0x6f, 0x73, 0x74, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x6f,
	0x66, 0x66, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x22, 0xa9, 0x01, 0x0a, 0x07, 0x42, 0x61,
	0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x37, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x6f, 0x66, 0x66, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x36,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f,
	0x66, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x13, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x45, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x26, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2a, 0x5d, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b,
	0x6f, 0x66, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x61, 0x63, 0x6b, 0x6f,
	0x66, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x5f,
	0x45, 0x58, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x5f, 0x43, 0x4f, 0x4e,
	0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescOnce sync.Once
	file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescData = file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDesc
)

func file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescGZIP() []byte {
	file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescOnce.Do(func() {
		file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescData)
	})
	return file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDescData
}

var file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_goTypes = []interface{}{
	(BackoffKind)(0),    // 0: backoff.BackoffKind
	(*Backoff)(nil),     // 1: backoff.Backoff
	(*Exponential)(nil), // 2: backoff.Exponential
	(*Constant)(nil),    // 3: backoff.Constant
}
var file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_depIdxs = []int32{
	0, // 0: backoff.Backoff.backoff_kind:type_name -> backoff.BackoffKind
	2, // 1: backoff.Backoff.exponential:type_name -> backoff.Exponential
	3, // 2: backoff.Backoff.constant:type_name -> backoff.Constant
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_init() }
func file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_init() {
	if File_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exponential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Constant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_goTypes,
		DependencyIndexes: file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_depIdxs,
		EnumInfos:         file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_enumTypes,
		MessageInfos:      file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_msgTypes,
	}.Build()
	File_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto = out.File
	file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_rawDesc = nil
	file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_goTypes = nil
	file_github_com_aperturerobotics_bifrost_util_backoff_backoff_proto_depIdxs = nil
}
