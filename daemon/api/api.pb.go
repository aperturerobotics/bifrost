// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/daemon/api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import controller1 "github.com/aperturerobotics/bifrost/peer/controller"
import forwarding "github.com/aperturerobotics/bifrost/stream/forwarding"
import grpc1 "github.com/aperturerobotics/bifrost/stream/grpc"
import accept "github.com/aperturerobotics/bifrost/stream/grpc/accept"
import dial "github.com/aperturerobotics/bifrost/stream/grpc/dial"
import listening "github.com/aperturerobotics/bifrost/stream/listening"
import controller "github.com/aperturerobotics/controllerbus/controller"
import exec "github.com/aperturerobotics/controllerbus/controller/exec"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GetPeerInfoRequest is the request type for GetPeerInfo.
type GetPeerInfoRequest struct {
	// PeerId restricts the response to a specific peer ID.
	PeerId               string   `protobuf:"bytes,1,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeerInfoRequest) Reset()         { *m = GetPeerInfoRequest{} }
func (m *GetPeerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetPeerInfoRequest) ProtoMessage()    {}
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{0}
}
func (m *GetPeerInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerInfoRequest.Unmarshal(m, b)
}
func (m *GetPeerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetPeerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerInfoRequest.Merge(dst, src)
}
func (m *GetPeerInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetPeerInfoRequest.Size(m)
}
func (m *GetPeerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerInfoRequest proto.InternalMessageInfo

func (m *GetPeerInfoRequest) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

// PeerInfo is basic information about a peer.
type PeerInfo struct {
	// PeerId is the b58 peer ID.
	PeerId               string   `protobuf:"bytes,1,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{1}
}
func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (dst *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(dst, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

// GetPeerInfoResponse is the response type for GetPeerInfo.
type GetPeerInfoResponse struct {
	// LocalPeers is the set of peers loaded.
	LocalPeers           []*PeerInfo `protobuf:"bytes,1,rep,name=local_peers,json=localPeers" json:"local_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetPeerInfoResponse) Reset()         { *m = GetPeerInfoResponse{} }
func (m *GetPeerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetPeerInfoResponse) ProtoMessage()    {}
func (*GetPeerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{2}
}
func (m *GetPeerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeerInfoResponse.Unmarshal(m, b)
}
func (m *GetPeerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeerInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetPeerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeerInfoResponse.Merge(dst, src)
}
func (m *GetPeerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetPeerInfoResponse.Size(m)
}
func (m *GetPeerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeerInfoResponse proto.InternalMessageInfo

func (m *GetPeerInfoResponse) GetLocalPeers() []*PeerInfo {
	if m != nil {
		return m.LocalPeers
	}
	return nil
}

// GetBusInfoRequest is the request type for GetBusInfo.
type GetBusInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBusInfoRequest) Reset()         { *m = GetBusInfoRequest{} }
func (m *GetBusInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetBusInfoRequest) ProtoMessage()    {}
func (*GetBusInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{3}
}
func (m *GetBusInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBusInfoRequest.Unmarshal(m, b)
}
func (m *GetBusInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBusInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetBusInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBusInfoRequest.Merge(dst, src)
}
func (m *GetBusInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetBusInfoRequest.Size(m)
}
func (m *GetBusInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBusInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBusInfoRequest proto.InternalMessageInfo

// DebugValue is a debug value.
type DebugValue struct {
	// Key is the debug value key.
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Values are the debug value values.
	Values               []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugValue) Reset()         { *m = DebugValue{} }
func (m *DebugValue) String() string { return proto.CompactTextString(m) }
func (*DebugValue) ProtoMessage()    {}
func (*DebugValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{4}
}
func (m *DebugValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugValue.Unmarshal(m, b)
}
func (m *DebugValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugValue.Marshal(b, m, deterministic)
}
func (dst *DebugValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugValue.Merge(dst, src)
}
func (m *DebugValue) XXX_Size() int {
	return xxx_messageInfo_DebugValue.Size(m)
}
func (m *DebugValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugValue.DiscardUnknown(m)
}

var xxx_messageInfo_DebugValue proto.InternalMessageInfo

func (m *DebugValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DebugValue) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// DirectiveInfo contains directive information.
type DirectiveInfo struct {
	// Name is the directive name.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// DebugVals contains the directive debug values.
	DebugVals            []*DebugValue `protobuf:"bytes,2,rep,name=debug_vals,json=debugVals" json:"debug_vals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DirectiveInfo) Reset()         { *m = DirectiveInfo{} }
func (m *DirectiveInfo) String() string { return proto.CompactTextString(m) }
func (*DirectiveInfo) ProtoMessage()    {}
func (*DirectiveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{5}
}
func (m *DirectiveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectiveInfo.Unmarshal(m, b)
}
func (m *DirectiveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectiveInfo.Marshal(b, m, deterministic)
}
func (dst *DirectiveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectiveInfo.Merge(dst, src)
}
func (m *DirectiveInfo) XXX_Size() int {
	return xxx_messageInfo_DirectiveInfo.Size(m)
}
func (m *DirectiveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectiveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DirectiveInfo proto.InternalMessageInfo

func (m *DirectiveInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DirectiveInfo) GetDebugVals() []*DebugValue {
	if m != nil {
		return m.DebugVals
	}
	return nil
}

// GetBusInfoResponse is the response type for GetBusInfo.
type GetBusInfoResponse struct {
	// RunningControllers is the list of running controllers.
	RunningControllers []*controller.Info `protobuf:"bytes,1,rep,name=running_controllers,json=runningControllers" json:"running_controllers,omitempty"`
	// RunningDirectives is the list of running directives.
	RunningDirectives    []*DirectiveInfo `protobuf:"bytes,2,rep,name=running_directives,json=runningDirectives" json:"running_directives,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetBusInfoResponse) Reset()         { *m = GetBusInfoResponse{} }
func (m *GetBusInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetBusInfoResponse) ProtoMessage()    {}
func (*GetBusInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{6}
}
func (m *GetBusInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBusInfoResponse.Unmarshal(m, b)
}
func (m *GetBusInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBusInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetBusInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBusInfoResponse.Merge(dst, src)
}
func (m *GetBusInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetBusInfoResponse.Size(m)
}
func (m *GetBusInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBusInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBusInfoResponse proto.InternalMessageInfo

func (m *GetBusInfoResponse) GetRunningControllers() []*controller.Info {
	if m != nil {
		return m.RunningControllers
	}
	return nil
}

func (m *GetBusInfoResponse) GetRunningDirectives() []*DirectiveInfo {
	if m != nil {
		return m.RunningDirectives
	}
	return nil
}

// ForwardStreamsRequest is the request type for ForwardStreams.
type ForwardStreamsRequest struct {
	ForwardingConfig     *forwarding.Config `protobuf:"bytes,1,opt,name=forwarding_config,json=forwardingConfig" json:"forwarding_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ForwardStreamsRequest) Reset()         { *m = ForwardStreamsRequest{} }
func (m *ForwardStreamsRequest) String() string { return proto.CompactTextString(m) }
func (*ForwardStreamsRequest) ProtoMessage()    {}
func (*ForwardStreamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{7}
}
func (m *ForwardStreamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardStreamsRequest.Unmarshal(m, b)
}
func (m *ForwardStreamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardStreamsRequest.Marshal(b, m, deterministic)
}
func (dst *ForwardStreamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardStreamsRequest.Merge(dst, src)
}
func (m *ForwardStreamsRequest) XXX_Size() int {
	return xxx_messageInfo_ForwardStreamsRequest.Size(m)
}
func (m *ForwardStreamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardStreamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardStreamsRequest proto.InternalMessageInfo

func (m *ForwardStreamsRequest) GetForwardingConfig() *forwarding.Config {
	if m != nil {
		return m.ForwardingConfig
	}
	return nil
}

// ForwardStreamsResponse is the response type for ForwardStreams.
type ForwardStreamsResponse struct {
	// ControllerStatus is the status of the forwarding controller.
	ControllerStatus     exec.ControllerStatus `protobuf:"varint,1,opt,name=controller_status,json=controllerStatus,enum=controller.exec.ControllerStatus" json:"controller_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ForwardStreamsResponse) Reset()         { *m = ForwardStreamsResponse{} }
func (m *ForwardStreamsResponse) String() string { return proto.CompactTextString(m) }
func (*ForwardStreamsResponse) ProtoMessage()    {}
func (*ForwardStreamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{8}
}
func (m *ForwardStreamsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForwardStreamsResponse.Unmarshal(m, b)
}
func (m *ForwardStreamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForwardStreamsResponse.Marshal(b, m, deterministic)
}
func (dst *ForwardStreamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForwardStreamsResponse.Merge(dst, src)
}
func (m *ForwardStreamsResponse) XXX_Size() int {
	return xxx_messageInfo_ForwardStreamsResponse.Size(m)
}
func (m *ForwardStreamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForwardStreamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForwardStreamsResponse proto.InternalMessageInfo

func (m *ForwardStreamsResponse) GetControllerStatus() exec.ControllerStatus {
	if m != nil {
		return m.ControllerStatus
	}
	return exec.ControllerStatus_ControllerStatus_UNKNOWN
}

// ListenStreamsRequest is the request type for ListenStreams.
type ListenStreamsRequest struct {
	ListeningConfig      *listening.Config `protobuf:"bytes,1,opt,name=listening_config,json=listeningConfig" json:"listening_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListenStreamsRequest) Reset()         { *m = ListenStreamsRequest{} }
func (m *ListenStreamsRequest) String() string { return proto.CompactTextString(m) }
func (*ListenStreamsRequest) ProtoMessage()    {}
func (*ListenStreamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{9}
}
func (m *ListenStreamsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenStreamsRequest.Unmarshal(m, b)
}
func (m *ListenStreamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenStreamsRequest.Marshal(b, m, deterministic)
}
func (dst *ListenStreamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenStreamsRequest.Merge(dst, src)
}
func (m *ListenStreamsRequest) XXX_Size() int {
	return xxx_messageInfo_ListenStreamsRequest.Size(m)
}
func (m *ListenStreamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenStreamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenStreamsRequest proto.InternalMessageInfo

func (m *ListenStreamsRequest) GetListeningConfig() *listening.Config {
	if m != nil {
		return m.ListeningConfig
	}
	return nil
}

// ListenStreamsResponse is the response type for ListenStreams.
type ListenStreamsResponse struct {
	// ControllerStatus is the status of the forwarding controller.
	ControllerStatus     exec.ControllerStatus `protobuf:"varint,1,opt,name=controller_status,json=controllerStatus,enum=controller.exec.ControllerStatus" json:"controller_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListenStreamsResponse) Reset()         { *m = ListenStreamsResponse{} }
func (m *ListenStreamsResponse) String() string { return proto.CompactTextString(m) }
func (*ListenStreamsResponse) ProtoMessage()    {}
func (*ListenStreamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{10}
}
func (m *ListenStreamsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenStreamsResponse.Unmarshal(m, b)
}
func (m *ListenStreamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenStreamsResponse.Marshal(b, m, deterministic)
}
func (dst *ListenStreamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenStreamsResponse.Merge(dst, src)
}
func (m *ListenStreamsResponse) XXX_Size() int {
	return xxx_messageInfo_ListenStreamsResponse.Size(m)
}
func (m *ListenStreamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenStreamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListenStreamsResponse proto.InternalMessageInfo

func (m *ListenStreamsResponse) GetControllerStatus() exec.ControllerStatus {
	if m != nil {
		return m.ControllerStatus
	}
	return exec.ControllerStatus_ControllerStatus_UNKNOWN
}

// AcceptStreamRequest is the request type for AcceptStream.
type AcceptStreamRequest struct {
	// Config is the configuration for the accept.
	// The first packet will contain this value.
	Config *accept.Config `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// Data is a data packet.
	Data                 *grpc1.Data `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AcceptStreamRequest) Reset()         { *m = AcceptStreamRequest{} }
func (m *AcceptStreamRequest) String() string { return proto.CompactTextString(m) }
func (*AcceptStreamRequest) ProtoMessage()    {}
func (*AcceptStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{11}
}
func (m *AcceptStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptStreamRequest.Unmarshal(m, b)
}
func (m *AcceptStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptStreamRequest.Marshal(b, m, deterministic)
}
func (dst *AcceptStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptStreamRequest.Merge(dst, src)
}
func (m *AcceptStreamRequest) XXX_Size() int {
	return xxx_messageInfo_AcceptStreamRequest.Size(m)
}
func (m *AcceptStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptStreamRequest proto.InternalMessageInfo

func (m *AcceptStreamRequest) GetConfig() *accept.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *AcceptStreamRequest) GetData() *grpc1.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// AcceptStreamResponse is the response type for AcceptStream.
type AcceptStreamResponse struct {
	// Data is a data packet.
	Data                 *grpc1.Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AcceptStreamResponse) Reset()         { *m = AcceptStreamResponse{} }
func (m *AcceptStreamResponse) String() string { return proto.CompactTextString(m) }
func (*AcceptStreamResponse) ProtoMessage()    {}
func (*AcceptStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{12}
}
func (m *AcceptStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptStreamResponse.Unmarshal(m, b)
}
func (m *AcceptStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptStreamResponse.Marshal(b, m, deterministic)
}
func (dst *AcceptStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptStreamResponse.Merge(dst, src)
}
func (m *AcceptStreamResponse) XXX_Size() int {
	return xxx_messageInfo_AcceptStreamResponse.Size(m)
}
func (m *AcceptStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptStreamResponse proto.InternalMessageInfo

func (m *AcceptStreamResponse) GetData() *grpc1.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// DialStreamRequest is the request type for DialStream.
type DialStreamRequest struct {
	// Config is the configuration for the dial.
	// The first packet will contain this value.
	Config *dial.Config `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	// Data is a data packet.
	Data                 *grpc1.Data `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DialStreamRequest) Reset()         { *m = DialStreamRequest{} }
func (m *DialStreamRequest) String() string { return proto.CompactTextString(m) }
func (*DialStreamRequest) ProtoMessage()    {}
func (*DialStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{13}
}
func (m *DialStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DialStreamRequest.Unmarshal(m, b)
}
func (m *DialStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DialStreamRequest.Marshal(b, m, deterministic)
}
func (dst *DialStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DialStreamRequest.Merge(dst, src)
}
func (m *DialStreamRequest) XXX_Size() int {
	return xxx_messageInfo_DialStreamRequest.Size(m)
}
func (m *DialStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DialStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DialStreamRequest proto.InternalMessageInfo

func (m *DialStreamRequest) GetConfig() *dial.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *DialStreamRequest) GetData() *grpc1.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// DialStreamResponse is the response type for DialStream.
type DialStreamResponse struct {
	// Data is a data packet.
	Data                 *grpc1.Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DialStreamResponse) Reset()         { *m = DialStreamResponse{} }
func (m *DialStreamResponse) String() string { return proto.CompactTextString(m) }
func (*DialStreamResponse) ProtoMessage()    {}
func (*DialStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{14}
}
func (m *DialStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DialStreamResponse.Unmarshal(m, b)
}
func (m *DialStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DialStreamResponse.Marshal(b, m, deterministic)
}
func (dst *DialStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DialStreamResponse.Merge(dst, src)
}
func (m *DialStreamResponse) XXX_Size() int {
	return xxx_messageInfo_DialStreamResponse.Size(m)
}
func (m *DialStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DialStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DialStreamResponse proto.InternalMessageInfo

func (m *DialStreamResponse) GetData() *grpc1.Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// IdentifyRequest is a request to load an identity.
type IdentifyRequest struct {
	// Config is the request to configure the peer controller.
	Config               *controller1.Config `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IdentifyRequest) Reset()         { *m = IdentifyRequest{} }
func (m *IdentifyRequest) String() string { return proto.CompactTextString(m) }
func (*IdentifyRequest) ProtoMessage()    {}
func (*IdentifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{15}
}
func (m *IdentifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyRequest.Unmarshal(m, b)
}
func (m *IdentifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyRequest.Marshal(b, m, deterministic)
}
func (dst *IdentifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyRequest.Merge(dst, src)
}
func (m *IdentifyRequest) XXX_Size() int {
	return xxx_messageInfo_IdentifyRequest.Size(m)
}
func (m *IdentifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyRequest proto.InternalMessageInfo

func (m *IdentifyRequest) GetConfig() *controller1.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

// IdentifyResponse is a response to an identify request.
type IdentifyResponse struct {
	// ControllerStatus is the status of the peer controller.
	ControllerStatus     exec.ControllerStatus `protobuf:"varint,1,opt,name=controller_status,json=controllerStatus,enum=controller.exec.ControllerStatus" json:"controller_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IdentifyResponse) Reset()         { *m = IdentifyResponse{} }
func (m *IdentifyResponse) String() string { return proto.CompactTextString(m) }
func (*IdentifyResponse) ProtoMessage()    {}
func (*IdentifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_fffdce19258d55e8, []int{16}
}
func (m *IdentifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyResponse.Unmarshal(m, b)
}
func (m *IdentifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyResponse.Marshal(b, m, deterministic)
}
func (dst *IdentifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyResponse.Merge(dst, src)
}
func (m *IdentifyResponse) XXX_Size() int {
	return xxx_messageInfo_IdentifyResponse.Size(m)
}
func (m *IdentifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyResponse proto.InternalMessageInfo

func (m *IdentifyResponse) GetControllerStatus() exec.ControllerStatus {
	if m != nil {
		return m.ControllerStatus
	}
	return exec.ControllerStatus_ControllerStatus_UNKNOWN
}

func init() {
	proto.RegisterType((*GetPeerInfoRequest)(nil), "api.GetPeerInfoRequest")
	proto.RegisterType((*PeerInfo)(nil), "api.PeerInfo")
	proto.RegisterType((*GetPeerInfoResponse)(nil), "api.GetPeerInfoResponse")
	proto.RegisterType((*GetBusInfoRequest)(nil), "api.GetBusInfoRequest")
	proto.RegisterType((*DebugValue)(nil), "api.DebugValue")
	proto.RegisterType((*DirectiveInfo)(nil), "api.DirectiveInfo")
	proto.RegisterType((*GetBusInfoResponse)(nil), "api.GetBusInfoResponse")
	proto.RegisterType((*ForwardStreamsRequest)(nil), "api.ForwardStreamsRequest")
	proto.RegisterType((*ForwardStreamsResponse)(nil), "api.ForwardStreamsResponse")
	proto.RegisterType((*ListenStreamsRequest)(nil), "api.ListenStreamsRequest")
	proto.RegisterType((*ListenStreamsResponse)(nil), "api.ListenStreamsResponse")
	proto.RegisterType((*AcceptStreamRequest)(nil), "api.AcceptStreamRequest")
	proto.RegisterType((*AcceptStreamResponse)(nil), "api.AcceptStreamResponse")
	proto.RegisterType((*DialStreamRequest)(nil), "api.DialStreamRequest")
	proto.RegisterType((*DialStreamResponse)(nil), "api.DialStreamResponse")
	proto.RegisterType((*IdentifyRequest)(nil), "api.IdentifyRequest")
	proto.RegisterType((*IdentifyResponse)(nil), "api.IdentifyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BifrostDaemonService service

type BifrostDaemonServiceClient interface {
	// Identify loads and manages a private key identity.
	Identify(ctx context.Context, in *IdentifyRequest, opts ...grpc.CallOption) (BifrostDaemonService_IdentifyClient, error)
	// GetPeerInfo returns information about attached peers.
	GetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error)
	// GetBusInfo requests information about the controller bus.
	GetBusInfo(ctx context.Context, in *GetBusInfoRequest, opts ...grpc.CallOption) (*GetBusInfoResponse, error)
	// ForwardStreams forwards streams to the target multiaddress.
	// Handles HandleMountedStream directives by contacting the target.
	ForwardStreams(ctx context.Context, in *ForwardStreamsRequest, opts ...grpc.CallOption) (BifrostDaemonService_ForwardStreamsClient, error)
	// ListenStreams listens for connections to the multiaddress.
	// Forwards the connections to a remote peer with a protocol ID.
	ListenStreams(ctx context.Context, in *ListenStreamsRequest, opts ...grpc.CallOption) (BifrostDaemonService_ListenStreamsClient, error)
	// AcceptStream accepts an incoming stream.
	// Stream data is sent over the request / response streams.
	AcceptStream(ctx context.Context, opts ...grpc.CallOption) (BifrostDaemonService_AcceptStreamClient, error)
	// DialStream dials a outgoing stream.
	// Stream data is sent over the request / response streams.
	DialStream(ctx context.Context, opts ...grpc.CallOption) (BifrostDaemonService_DialStreamClient, error)
}

type bifrostDaemonServiceClient struct {
	cc *grpc.ClientConn
}

func NewBifrostDaemonServiceClient(cc *grpc.ClientConn) BifrostDaemonServiceClient {
	return &bifrostDaemonServiceClient{cc}
}

func (c *bifrostDaemonServiceClient) Identify(ctx context.Context, in *IdentifyRequest, opts ...grpc.CallOption) (BifrostDaemonService_IdentifyClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BifrostDaemonService_serviceDesc.Streams[0], c.cc, "/api.BifrostDaemonService/Identify", opts...)
	if err != nil {
		return nil, err
	}
	x := &bifrostDaemonServiceIdentifyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BifrostDaemonService_IdentifyClient interface {
	Recv() (*IdentifyResponse, error)
	grpc.ClientStream
}

type bifrostDaemonServiceIdentifyClient struct {
	grpc.ClientStream
}

func (x *bifrostDaemonServiceIdentifyClient) Recv() (*IdentifyResponse, error) {
	m := new(IdentifyResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bifrostDaemonServiceClient) GetPeerInfo(ctx context.Context, in *GetPeerInfoRequest, opts ...grpc.CallOption) (*GetPeerInfoResponse, error) {
	out := new(GetPeerInfoResponse)
	err := grpc.Invoke(ctx, "/api.BifrostDaemonService/GetPeerInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bifrostDaemonServiceClient) GetBusInfo(ctx context.Context, in *GetBusInfoRequest, opts ...grpc.CallOption) (*GetBusInfoResponse, error) {
	out := new(GetBusInfoResponse)
	err := grpc.Invoke(ctx, "/api.BifrostDaemonService/GetBusInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bifrostDaemonServiceClient) ForwardStreams(ctx context.Context, in *ForwardStreamsRequest, opts ...grpc.CallOption) (BifrostDaemonService_ForwardStreamsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BifrostDaemonService_serviceDesc.Streams[1], c.cc, "/api.BifrostDaemonService/ForwardStreams", opts...)
	if err != nil {
		return nil, err
	}
	x := &bifrostDaemonServiceForwardStreamsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BifrostDaemonService_ForwardStreamsClient interface {
	Recv() (*ForwardStreamsResponse, error)
	grpc.ClientStream
}

type bifrostDaemonServiceForwardStreamsClient struct {
	grpc.ClientStream
}

func (x *bifrostDaemonServiceForwardStreamsClient) Recv() (*ForwardStreamsResponse, error) {
	m := new(ForwardStreamsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bifrostDaemonServiceClient) ListenStreams(ctx context.Context, in *ListenStreamsRequest, opts ...grpc.CallOption) (BifrostDaemonService_ListenStreamsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BifrostDaemonService_serviceDesc.Streams[2], c.cc, "/api.BifrostDaemonService/ListenStreams", opts...)
	if err != nil {
		return nil, err
	}
	x := &bifrostDaemonServiceListenStreamsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BifrostDaemonService_ListenStreamsClient interface {
	Recv() (*ListenStreamsResponse, error)
	grpc.ClientStream
}

type bifrostDaemonServiceListenStreamsClient struct {
	grpc.ClientStream
}

func (x *bifrostDaemonServiceListenStreamsClient) Recv() (*ListenStreamsResponse, error) {
	m := new(ListenStreamsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bifrostDaemonServiceClient) AcceptStream(ctx context.Context, opts ...grpc.CallOption) (BifrostDaemonService_AcceptStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BifrostDaemonService_serviceDesc.Streams[3], c.cc, "/api.BifrostDaemonService/AcceptStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &bifrostDaemonServiceAcceptStreamClient{stream}
	return x, nil
}

type BifrostDaemonService_AcceptStreamClient interface {
	Send(*AcceptStreamRequest) error
	Recv() (*AcceptStreamResponse, error)
	grpc.ClientStream
}

type bifrostDaemonServiceAcceptStreamClient struct {
	grpc.ClientStream
}

func (x *bifrostDaemonServiceAcceptStreamClient) Send(m *AcceptStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bifrostDaemonServiceAcceptStreamClient) Recv() (*AcceptStreamResponse, error) {
	m := new(AcceptStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bifrostDaemonServiceClient) DialStream(ctx context.Context, opts ...grpc.CallOption) (BifrostDaemonService_DialStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BifrostDaemonService_serviceDesc.Streams[4], c.cc, "/api.BifrostDaemonService/DialStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &bifrostDaemonServiceDialStreamClient{stream}
	return x, nil
}

type BifrostDaemonService_DialStreamClient interface {
	Send(*DialStreamRequest) error
	Recv() (*DialStreamResponse, error)
	grpc.ClientStream
}

type bifrostDaemonServiceDialStreamClient struct {
	grpc.ClientStream
}

func (x *bifrostDaemonServiceDialStreamClient) Send(m *DialStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bifrostDaemonServiceDialStreamClient) Recv() (*DialStreamResponse, error) {
	m := new(DialStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for BifrostDaemonService service

type BifrostDaemonServiceServer interface {
	// Identify loads and manages a private key identity.
	Identify(*IdentifyRequest, BifrostDaemonService_IdentifyServer) error
	// GetPeerInfo returns information about attached peers.
	GetPeerInfo(context.Context, *GetPeerInfoRequest) (*GetPeerInfoResponse, error)
	// GetBusInfo requests information about the controller bus.
	GetBusInfo(context.Context, *GetBusInfoRequest) (*GetBusInfoResponse, error)
	// ForwardStreams forwards streams to the target multiaddress.
	// Handles HandleMountedStream directives by contacting the target.
	ForwardStreams(*ForwardStreamsRequest, BifrostDaemonService_ForwardStreamsServer) error
	// ListenStreams listens for connections to the multiaddress.
	// Forwards the connections to a remote peer with a protocol ID.
	ListenStreams(*ListenStreamsRequest, BifrostDaemonService_ListenStreamsServer) error
	// AcceptStream accepts an incoming stream.
	// Stream data is sent over the request / response streams.
	AcceptStream(BifrostDaemonService_AcceptStreamServer) error
	// DialStream dials a outgoing stream.
	// Stream data is sent over the request / response streams.
	DialStream(BifrostDaemonService_DialStreamServer) error
}

func RegisterBifrostDaemonServiceServer(s *grpc.Server, srv BifrostDaemonServiceServer) {
	s.RegisterService(&_BifrostDaemonService_serviceDesc, srv)
}

func _BifrostDaemonService_Identify_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IdentifyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BifrostDaemonServiceServer).Identify(m, &bifrostDaemonServiceIdentifyServer{stream})
}

type BifrostDaemonService_IdentifyServer interface {
	Send(*IdentifyResponse) error
	grpc.ServerStream
}

type bifrostDaemonServiceIdentifyServer struct {
	grpc.ServerStream
}

func (x *bifrostDaemonServiceIdentifyServer) Send(m *IdentifyResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BifrostDaemonService_GetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BifrostDaemonServiceServer).GetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BifrostDaemonService/GetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BifrostDaemonServiceServer).GetPeerInfo(ctx, req.(*GetPeerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BifrostDaemonService_GetBusInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BifrostDaemonServiceServer).GetBusInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BifrostDaemonService/GetBusInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BifrostDaemonServiceServer).GetBusInfo(ctx, req.(*GetBusInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BifrostDaemonService_ForwardStreams_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ForwardStreamsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BifrostDaemonServiceServer).ForwardStreams(m, &bifrostDaemonServiceForwardStreamsServer{stream})
}

type BifrostDaemonService_ForwardStreamsServer interface {
	Send(*ForwardStreamsResponse) error
	grpc.ServerStream
}

type bifrostDaemonServiceForwardStreamsServer struct {
	grpc.ServerStream
}

func (x *bifrostDaemonServiceForwardStreamsServer) Send(m *ForwardStreamsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BifrostDaemonService_ListenStreams_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenStreamsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BifrostDaemonServiceServer).ListenStreams(m, &bifrostDaemonServiceListenStreamsServer{stream})
}

type BifrostDaemonService_ListenStreamsServer interface {
	Send(*ListenStreamsResponse) error
	grpc.ServerStream
}

type bifrostDaemonServiceListenStreamsServer struct {
	grpc.ServerStream
}

func (x *bifrostDaemonServiceListenStreamsServer) Send(m *ListenStreamsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BifrostDaemonService_AcceptStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BifrostDaemonServiceServer).AcceptStream(&bifrostDaemonServiceAcceptStreamServer{stream})
}

type BifrostDaemonService_AcceptStreamServer interface {
	Send(*AcceptStreamResponse) error
	Recv() (*AcceptStreamRequest, error)
	grpc.ServerStream
}

type bifrostDaemonServiceAcceptStreamServer struct {
	grpc.ServerStream
}

func (x *bifrostDaemonServiceAcceptStreamServer) Send(m *AcceptStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bifrostDaemonServiceAcceptStreamServer) Recv() (*AcceptStreamRequest, error) {
	m := new(AcceptStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BifrostDaemonService_DialStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BifrostDaemonServiceServer).DialStream(&bifrostDaemonServiceDialStreamServer{stream})
}

type BifrostDaemonService_DialStreamServer interface {
	Send(*DialStreamResponse) error
	Recv() (*DialStreamRequest, error)
	grpc.ServerStream
}

type bifrostDaemonServiceDialStreamServer struct {
	grpc.ServerStream
}

func (x *bifrostDaemonServiceDialStreamServer) Send(m *DialStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bifrostDaemonServiceDialStreamServer) Recv() (*DialStreamRequest, error) {
	m := new(DialStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BifrostDaemonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BifrostDaemonService",
	HandlerType: (*BifrostDaemonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPeerInfo",
			Handler:    _BifrostDaemonService_GetPeerInfo_Handler,
		},
		{
			MethodName: "GetBusInfo",
			Handler:    _BifrostDaemonService_GetBusInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Identify",
			Handler:       _BifrostDaemonService_Identify_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ForwardStreams",
			Handler:       _BifrostDaemonService_ForwardStreams_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListenStreams",
			Handler:       _BifrostDaemonService_ListenStreams_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AcceptStream",
			Handler:       _BifrostDaemonService_AcceptStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DialStream",
			Handler:       _BifrostDaemonService_DialStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/aperturerobotics/bifrost/daemon/api/api.proto",
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/daemon/api/api.proto", fileDescriptor_api_fffdce19258d55e8)
}

var fileDescriptor_api_fffdce19258d55e8 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdf, 0x6f, 0xdb, 0x36,
	0x10, 0x9e, 0xe2, 0xc0, 0x4b, 0xce, 0x4b, 0x62, 0xd3, 0x4e, 0xec, 0x68, 0x2f, 0x99, 0x86, 0x01,
	0x79, 0x99, 0x1c, 0x78, 0xc0, 0x30, 0x2c, 0x18, 0xb2, 0xd8, 0x4e, 0x02, 0x17, 0x6d, 0x51, 0xd8,
	0x40, 0x5f, 0xfa, 0x20, 0xd0, 0x12, 0xed, 0x10, 0x95, 0x25, 0x95, 0xa4, 0xdc, 0xe6, 0xb9, 0xff,
	0x45, 0xff, 0xda, 0x42, 0x14, 0x69, 0xfd, 0xb0, 0x1b, 0xc4, 0x01, 0xf2, 0x10, 0x85, 0x3c, 0xde,
	0x7d, 0xf7, 0x7d, 0xe4, 0xdd, 0x19, 0xfe, 0x99, 0x53, 0x71, 0x1f, 0x4f, 0x6d, 0x37, 0x5c, 0x74,
	0x71, 0x44, 0x98, 0x88, 0x19, 0x61, 0xe1, 0x34, 0x14, 0xd4, 0xe5, 0xdd, 0x29, 0x9d, 0xb1, 0x90,
	0x8b, 0xae, 0x87, 0xc9, 0x22, 0x0c, 0xba, 0x38, 0xa2, 0xc9, 0x9f, 0x1d, 0xb1, 0x50, 0x84, 0xa8,
	0x82, 0x23, 0x6a, 0xde, 0x3c, 0x16, 0xee, 0x86, 0x81, 0x60, 0xa1, 0xef, 0x13, 0x36, 0x8d, 0xf3,
	0xbb, 0xdc, 0x32, 0xc5, 0x32, 0x87, 0xcf, 0x82, 0x21, 0x5f, 0x88, 0x2b, 0x3f, 0x0a, 0xe5, 0xff,
	0xa7, 0x68, 0x89, 0x48, 0x81, 0x40, 0xb2, 0x9c, 0xd1, 0xb9, 0x42, 0xb8, 0x7d, 0x0a, 0x02, 0x17,
	0x8c, 0xe0, 0x45, 0x77, 0x16, 0xb2, 0xcf, 0x98, 0x79, 0x34, 0x98, 0xe7, 0x96, 0x4f, 0xd1, 0x53,
	0xc2, 0xf1, 0x29, 0x17, 0x24, 0x48, 0x60, 0x56, 0x2b, 0x85, 0xf2, 0xef, 0x16, 0x28, 0x73, 0x16,
	0xb9, 0xf2, 0xa3, 0x62, 0x07, 0xdb, 0xc6, 0x62, 0xd7, 0x25, 0x91, 0x50, 0xff, 0x14, 0xc8, 0xd5,
	0xb6, 0x20, 0x1e, 0xc5, 0xbe, 0xfc, 0xa4, 0x00, 0xd6, 0x9f, 0x80, 0xee, 0x88, 0x78, 0x47, 0x08,
	0x1b, 0x05, 0xb3, 0x70, 0x4c, 0x3e, 0xc5, 0x84, 0x0b, 0xd4, 0x86, 0x9f, 0x93, 0x57, 0x70, 0xa8,
	0xd7, 0x31, 0xce, 0x8c, 0xf3, 0xfd, 0x71, 0x35, 0xd9, 0x8e, 0x3c, 0xeb, 0x77, 0xd8, 0xd3, 0xbe,
	0x3f, 0x76, 0xba, 0x81, 0x66, 0x01, 0x93, 0x47, 0x61, 0xc0, 0x09, 0xb2, 0xa1, 0xe6, 0x87, 0x2e,
	0xf6, 0x9d, 0xc4, 0x8d, 0x77, 0x8c, 0xb3, 0xca, 0x79, 0xad, 0x77, 0x60, 0x27, 0xf5, 0xba, 0xf2,
	0x05, 0xe9, 0x91, 0x6c, 0xb9, 0xd5, 0x84, 0xc6, 0x1d, 0x11, 0xfd, 0x98, 0xe7, 0x98, 0x59, 0x7f,
	0x03, 0x0c, 0xc9, 0x34, 0x9e, 0xbf, 0xc7, 0x7e, 0x4c, 0x50, 0x1d, 0x2a, 0x1f, 0xc9, 0x83, 0x4a,
	0x9f, 0x2c, 0xd1, 0x09, 0x54, 0x97, 0xc9, 0x11, 0xef, 0xec, 0x9c, 0x55, 0x12, 0x4e, 0xe9, 0xce,
	0x9a, 0xc0, 0xc1, 0x90, 0x32, 0xe2, 0x0a, 0xba, 0x24, 0x92, 0x3d, 0x82, 0xdd, 0x00, 0x2f, 0x88,
	0x8a, 0x95, 0x6b, 0x64, 0x03, 0x78, 0x09, 0xb8, 0xb3, 0xc4, 0x7e, 0x0a, 0x50, 0xeb, 0x1d, 0x49,
	0x82, 0x59, 0xce, 0xf1, 0xbe, 0xa7, 0xd6, 0xdc, 0xfa, 0x66, 0xc8, 0xdb, 0x5b, 0x51, 0x54, 0x42,
	0xaf, 0xa1, 0xc9, 0xe2, 0x20, 0x29, 0x13, 0x27, 0x2b, 0x63, 0x2d, 0xb8, 0x6e, 0xe7, 0x7a, 0x4b,
	0x86, 0x21, 0xe5, 0x3c, 0xc8, 0x7c, 0xd1, 0x35, 0x68, 0xab, 0xe3, 0x69, 0xda, 0x9a, 0x11, 0x4a,
	0x19, 0xe5, 0xd5, 0x8c, 0x1b, 0xca, 0x7b, 0x65, 0xe5, 0x96, 0x03, 0xc7, 0xb7, 0x69, 0xd5, 0x4f,
	0xe4, 0xfb, 0x73, 0xfd, 0xb8, 0xb7, 0xd0, 0xc8, 0xda, 0xc1, 0x49, 0xbb, 0x4b, 0x5e, 0x43, 0xad,
	0x77, 0x6a, 0xa7, 0xb5, 0x62, 0xe7, 0xfa, 0x65, 0x20, 0x1d, 0xc6, 0xf5, 0xcc, 0x94, 0x5a, 0xac,
	0x7b, 0x38, 0x29, 0x27, 0x50, 0x17, 0xf0, 0x16, 0x1a, 0x99, 0x48, 0x87, 0x0b, 0x2c, 0x62, 0x2e,
	0x33, 0x1c, 0xf6, 0x7e, 0xcb, 0xcb, 0x97, 0x93, 0x21, 0x93, 0x3d, 0x91, 0x8e, 0xe3, 0xba, 0x5b,
	0xb2, 0x58, 0x1f, 0xa0, 0xf5, 0x5a, 0x76, 0x5e, 0x49, 0xc9, 0x00, 0xea, 0xab, 0x8e, 0x2c, 0x0a,
	0xe9, 0x68, 0x21, 0x59, 0xc7, 0x2a, 0x1d, 0x47, 0x2b, 0x8b, 0x92, 0x31, 0x87, 0xe3, 0x12, 0xf8,
	0x0b, 0xa9, 0x88, 0xa0, 0x79, 0x2d, 0x7b, 0x37, 0x4d, 0xa4, 0x45, 0xf4, 0xa0, 0x5a, 0xa0, 0x6e,
	0x6a, 0xea, 0x72, 0x56, 0xa8, 0x6e, 0x57, 0xe4, 0x95, 0x27, 0xfa, 0x03, 0x76, 0x3d, 0x2c, 0x70,
	0x67, 0x47, 0x46, 0x34, 0x0a, 0x11, 0x43, 0x2c, 0xf0, 0x58, 0x1e, 0x5b, 0xff, 0x41, 0xab, 0x98,
	0x51, 0x29, 0xd3, 0xe1, 0xc6, 0xe3, 0xe1, 0x3e, 0x34, 0x86, 0x14, 0xfb, 0x45, 0xba, 0x17, 0x25,
	0xba, 0x9d, 0x42, 0xb4, 0x9c, 0x2c, 0xcf, 0x23, 0x7b, 0x09, 0x28, 0x9f, 0x6d, 0x3b, 0xaa, 0x7d,
	0x38, 0x1a, 0x79, 0x24, 0x10, 0x74, 0xf6, 0xa0, 0x89, 0x76, 0x4b, 0x44, 0xdb, 0x76, 0x32, 0x77,
	0xf2, 0x0f, 0x57, 0xe4, 0x69, 0x4d, 0xa1, 0x9e, 0x61, 0xbc, 0x4c, 0x0d, 0xf4, 0xbe, 0xee, 0x42,
	0xab, 0x9f, 0x8e, 0xe5, 0xa1, 0xfc, 0xc9, 0x9e, 0x10, 0xb6, 0xa4, 0x2e, 0x41, 0x97, 0xb0, 0xa7,
	0x93, 0xa3, 0x96, 0x6c, 0xf0, 0x92, 0x1e, 0xf3, 0xb8, 0x64, 0x4d, 0x19, 0x5a, 0x3f, 0x5d, 0x18,
	0xa8, 0x0f, 0xb5, 0xdc, 0xc0, 0x45, 0x6d, 0xe9, 0xb9, 0x3e, 0xd6, 0xcd, 0xce, 0xfa, 0x81, 0x46,
	0x41, 0x57, 0x00, 0xd9, 0x28, 0x43, 0x27, 0xda, 0xb3, 0x38, 0x7e, 0xcd, 0xf6, 0x9a, 0x7d, 0x05,
	0xf0, 0x06, 0x0e, 0x8b, 0xe3, 0x00, 0x99, 0xd2, 0x79, 0xe3, 0x10, 0x32, 0x7f, 0xdd, 0x78, 0x96,
	0xd3, 0xf4, 0x0a, 0x0e, 0x0a, 0x6d, 0x89, 0x4e, 0x65, 0xc4, 0xa6, 0x39, 0x60, 0x9a, 0x9b, 0x8e,
	0x72, 0x58, 0x23, 0xf8, 0x25, 0xdf, 0x07, 0x28, 0xbd, 0x87, 0x0d, 0xcd, 0x68, 0x9e, 0x6e, 0x38,
	0xd1, 0x40, 0xe7, 0xc6, 0x85, 0x81, 0x06, 0x00, 0x59, 0x95, 0xaa, 0x6b, 0x5a, 0x6b, 0x12, 0x75,
	0x4d, 0xeb, 0xe5, 0x9c, 0x82, 0x4c, 0xab, 0xf2, 0xb7, 0xf7, 0xaf, 0xef, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xdf, 0xd3, 0xa7, 0xdf, 0xdb, 0x09, 0x00, 0x00,
}
