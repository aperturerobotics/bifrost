// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/daemon/api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import controller "github.com/aperturerobotics/controllerbus/controller"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Config configures the GRPC API.
type Config struct {
	// ListenAddr is the address to listen on for connections.
	ListenAddr string `protobuf:"bytes,1,opt,name=listen_addr,json=listenAddr" json:"listen_addr,omitempty"`
	// NodePeerId constrains the API to a specific running node.
	// Empty will select the first available node.
	NodePeerId           string   `protobuf:"bytes,2,opt,name=node_peer_id,json=nodePeerId" json:"node_peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4f7b774ef9f2820, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetListenAddr() string {
	if m != nil {
		return m.ListenAddr
	}
	return ""
}

func (m *Config) GetNodePeerId() string {
	if m != nil {
		return m.NodePeerId
	}
	return ""
}

// GetNodeInfoRequest is the request type for GetNodeInfo.
type GetNodeInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeInfoRequest) Reset()         { *m = GetNodeInfoRequest{} }
func (m *GetNodeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeInfoRequest) ProtoMessage()    {}
func (*GetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4f7b774ef9f2820, []int{1}
}
func (m *GetNodeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeInfoRequest.Unmarshal(m, b)
}
func (m *GetNodeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeInfoRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeInfoRequest.Merge(dst, src)
}
func (m *GetNodeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeInfoRequest.Size(m)
}
func (m *GetNodeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeInfoRequest proto.InternalMessageInfo

// GetNodeInfoResponse is the response type for GetNodeInfo.
type GetNodeInfoResponse struct {
	// NodeID is the b58 node ID.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// RunningControllers is the list of running controllers.
	RunningControllers   []*controller.Info `protobuf:"bytes,2,rep,name=running_controllers,json=runningControllers" json:"running_controllers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetNodeInfoResponse) Reset()         { *m = GetNodeInfoResponse{} }
func (m *GetNodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeInfoResponse) ProtoMessage()    {}
func (*GetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_e4f7b774ef9f2820, []int{2}
}
func (m *GetNodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeInfoResponse.Unmarshal(m, b)
}
func (m *GetNodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeInfoResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeInfoResponse.Merge(dst, src)
}
func (m *GetNodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeInfoResponse.Size(m)
}
func (m *GetNodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeInfoResponse proto.InternalMessageInfo

func (m *GetNodeInfoResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *GetNodeInfoResponse) GetRunningControllers() []*controller.Info {
	if m != nil {
		return m.RunningControllers
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "api.Config")
	proto.RegisterType((*GetNodeInfoRequest)(nil), "api.GetNodeInfoRequest")
	proto.RegisterType((*GetNodeInfoResponse)(nil), "api.GetNodeInfoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BifrostDaemonService service

type BifrostDaemonServiceClient interface {
	// GetNodeInfo returns the node information
	GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error)
}

type bifrostDaemonServiceClient struct {
	cc *grpc.ClientConn
}

func NewBifrostDaemonServiceClient(cc *grpc.ClientConn) BifrostDaemonServiceClient {
	return &bifrostDaemonServiceClient{cc}
}

func (c *bifrostDaemonServiceClient) GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error) {
	out := new(GetNodeInfoResponse)
	err := grpc.Invoke(ctx, "/api.BifrostDaemonService/GetNodeInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BifrostDaemonService service

type BifrostDaemonServiceServer interface {
	// GetNodeInfo returns the node information
	GetNodeInfo(context.Context, *GetNodeInfoRequest) (*GetNodeInfoResponse, error)
}

func RegisterBifrostDaemonServiceServer(s *grpc.Server, srv BifrostDaemonServiceServer) {
	s.RegisterService(&_BifrostDaemonService_serviceDesc, srv)
}

func _BifrostDaemonService_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BifrostDaemonServiceServer).GetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.BifrostDaemonService/GetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BifrostDaemonServiceServer).GetNodeInfo(ctx, req.(*GetNodeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BifrostDaemonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.BifrostDaemonService",
	HandlerType: (*BifrostDaemonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNodeInfo",
			Handler:    _BifrostDaemonService_GetNodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/aperturerobotics/bifrost/daemon/api/api.proto",
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/daemon/api/api.proto", fileDescriptor_api_e4f7b774ef9f2820)
}

var fileDescriptor_api_e4f7b774ef9f2820 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xb1, 0x6b, 0xf3, 0x30,
	0x10, 0xc5, 0xbf, 0x24, 0xe0, 0x8f, 0xca, 0x1d, 0x8a, 0x12, 0x88, 0xc9, 0x52, 0xe3, 0x29, 0x93,
	0x0d, 0xe9, 0xd2, 0x35, 0x49, 0x4b, 0x31, 0x85, 0x52, 0xd2, 0xad, 0x8b, 0xb1, 0xad, 0xb3, 0x7b,
	0xe0, 0xe8, 0x94, 0x93, 0xdc, 0xbf, 0xbf, 0xd8, 0x0e, 0xc4, 0x25, 0xd0, 0x41, 0xa0, 0x7b, 0x7a,
	0x7a, 0x7a, 0xfa, 0x89, 0xc7, 0x1a, 0xdd, 0x57, 0x5b, 0xc4, 0x25, 0x1d, 0x93, 0xdc, 0x00, 0xbb,
	0x96, 0x81, 0xa9, 0x20, 0x87, 0xa5, 0x4d, 0x0a, 0xac, 0x98, 0xac, 0x4b, 0x54, 0x0e, 0x47, 0xd2,
	0x49, 0x6e, 0xb0, 0x5b, 0xb1, 0x61, 0x72, 0x24, 0x67, 0xb9, 0xc1, 0xd5, 0xf3, 0x5f, 0xd7, 0x4b,
	0xd2, 0x8e, 0xa9, 0x69, 0x80, 0x8b, 0x76, 0x3c, 0x8d, 0xb6, 0x43, 0x56, 0xf4, 0x2a, 0xbc, 0x3d,
	0xe9, 0x0a, 0x6b, 0x79, 0x2f, 0xfc, 0x06, 0xad, 0x03, 0x9d, 0xe5, 0x4a, 0x71, 0x30, 0x09, 0x27,
	0xeb, 0x9b, 0x83, 0x18, 0xa4, 0xad, 0x52, 0x2c, 0x43, 0x71, 0xab, 0x49, 0x41, 0x66, 0x00, 0x38,
	0x43, 0x15, 0x4c, 0x07, 0x47, 0xa7, 0xbd, 0x03, 0x70, 0xaa, 0xa2, 0x85, 0x90, 0x2f, 0xe0, 0xde,
	0x48, 0x41, 0xaa, 0x2b, 0x3a, 0xc0, 0xa9, 0x05, 0xeb, 0xa2, 0x93, 0x98, 0xff, 0x52, 0xad, 0x21,
	0x6d, 0x41, 0x2e, 0xc5, 0xff, 0x3e, 0x0e, 0xd5, 0xf9, 0x2d, 0xaf, 0x1b, 0x53, 0x25, 0xb7, 0x62,
	0xce, 0xad, 0xd6, 0xa8, 0xeb, 0xec, 0x52, 0xd7, 0x06, 0xd3, 0x70, 0xb6, 0xf6, 0x37, 0x77, 0xf1,
	0xe8, 0x0b, 0x7d, 0x9e, 0x3c, 0x9b, 0xf7, 0x17, 0xef, 0xe6, 0x53, 0x2c, 0x76, 0x03, 0xc1, 0xa7,
	0x1e, 0xe0, 0x07, 0xf0, 0x37, 0x96, 0x20, 0x77, 0xc2, 0x1f, 0x55, 0x91, 0xcb, 0xb8, 0x83, 0x7a,
	0x5d, 0x79, 0x15, 0x5c, 0x1f, 0x0c, 0xad, 0xa3, 0x7f, 0x85, 0xd7, 0x83, 0x7b, 0xf8, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xfb, 0xab, 0xc0, 0x75, 0xc0, 0x01, 0x00, 0x00,
}
