syntax = "proto3";
package api;

import "github.com/aperturerobotics/controllerbus/controller/controller.proto";

// Config configures the GRPC API.
message Config {
  // ListenAddr is the address to listen on for connections.
  string listen_addr = 1;
}

// GetPeerInfoRequest is the request type for GetPeerInfo.
message GetPeerInfoRequest {
  // PeerId restricts the response to a specific peer ID.
  string peer_id = 1;
}

// PeerInfo is basic information about a peer.
message PeerInfo {
  // PeerId is the b58 peer ID.
  string peer_id = 1;
}

// GetPeerInfoResponse is the response type for GetPeerInfo.
message GetPeerInfoResponse {
  // LocalPeers is the set of peers loaded.
  repeated PeerInfo local_peers = 1;
}

// GetBusInfoRequest is the request type for GetBusInfo.
message GetBusInfoRequest {
}

// GetBusInfoResponse is the response type for GetBusInfo.
message GetBusInfoResponse {
  // RunningControllers is the list of running controllers.
  repeated controller.Info running_controllers = 1;
}

// BifrostDaemonService is the control service for a daemon, contacted by the CLI.
service BifrostDaemonService {
  // GetPeerInfo returns information about attached peers.
  rpc GetPeerInfo(GetPeerInfoRequest) returns (GetPeerInfoResponse) {}
  // GetBusInfo requests information about the controller bus.
  rpc GetBusInfo(GetBusInfoRequest) returns (GetBusInfoResponse) {}
}
