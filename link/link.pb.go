// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/link/link.proto

package link

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// LinkInfo contains information about a link.
type LinkInfo struct {
	// UUID is a host-transport-unique UUID of the link.
	Uuid uint64 `protobuf:"varint,1,opt,name=uuid" json:"uuid,omitempty"`
	// TransportUUID is a host-unique UUID of the transport.
	TransportUuid uint64 `protobuf:"varint,2,opt,name=transport_uuid,json=transportUuid" json:"transport_uuid,omitempty"`
	// Routable indicates if the link is routable or not.
	Routable bool `protobuf:"varint,3,opt,name=routable" json:"routable,omitempty"`
	// RemotePeerID is the identifier of the remote peer.
	RemotePeerId []byte `protobuf:"bytes,4,opt,name=remote_peer_id,json=remotePeerId,proto3" json:"remote_peer_id,omitempty"`
	// Data contains link specific data.
	// Example: remote IP address and port.
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkInfo) Reset()         { *m = LinkInfo{} }
func (m *LinkInfo) String() string { return proto.CompactTextString(m) }
func (*LinkInfo) ProtoMessage()    {}
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_link_75aedf0608c5652c, []int{0}
}
func (m *LinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkInfo.Unmarshal(m, b)
}
func (m *LinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkInfo.Marshal(b, m, deterministic)
}
func (dst *LinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkInfo.Merge(dst, src)
}
func (m *LinkInfo) XXX_Size() int {
	return xxx_messageInfo_LinkInfo.Size(m)
}
func (m *LinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LinkInfo proto.InternalMessageInfo

func (m *LinkInfo) GetUuid() uint64 {
	if m != nil {
		return m.Uuid
	}
	return 0
}

func (m *LinkInfo) GetTransportUuid() uint64 {
	if m != nil {
		return m.TransportUuid
	}
	return 0
}

func (m *LinkInfo) GetRoutable() bool {
	if m != nil {
		return m.Routable
	}
	return false
}

func (m *LinkInfo) GetRemotePeerId() []byte {
	if m != nil {
		return m.RemotePeerId
	}
	return nil
}

func (m *LinkInfo) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*LinkInfo)(nil), "link.LinkInfo")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/link/link.proto", fileDescriptor_link_75aedf0608c5652c)
}

var fileDescriptor_link_75aedf0608c5652c = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8e, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x89, 0x46, 0x29, 0x61, 0xdd, 0x43, 0x4e, 0xc1, 0x53, 0x11, 0x85, 0x9e, 0xb6, 0x87,
	0x3e, 0x45, 0xc1, 0x83, 0x14, 0x3c, 0x97, 0xa4, 0x99, 0x6a, 0x68, 0x9b, 0x09, 0xd3, 0xc9, 0xd3,
	0xf8, 0xb2, 0xd2, 0x2c, 0xf4, 0x32, 0x7c, 0xf3, 0x7f, 0x03, 0xf3, 0xab, 0xee, 0x27, 0xf0, 0x6f,
	0x76, 0xb7, 0x09, 0xb7, 0xd6, 0x26, 0x20, 0xce, 0x04, 0x84, 0x0e, 0x39, 0x4c, 0x7b, 0xeb, 0xc2,
	0x4c, 0xb8, 0x73, 0xbb, 0x86, 0xb8, 0x94, 0x71, 0x4b, 0x84, 0x8c, 0x5a, 0x1e, 0xfc, 0xf6, 0x27,
	0x54, 0xf5, 0x19, 0xe2, 0xd2, 0xc7, 0x19, 0xb5, 0x56, 0x32, 0xe7, 0xe0, 0x8d, 0xa8, 0x45, 0x23,
	0x87, 0xc2, 0xfa, 0x43, 0x5d, 0x99, 0x6c, 0xdc, 0x13, 0x12, 0x8f, 0xc5, 0x3e, 0x14, 0xfb, 0x72,
	0xa6, 0xdf, 0xc7, 0xd9, 0xab, 0xaa, 0x08, 0x33, 0x5b, 0xb7, 0x82, 0x79, 0xac, 0x45, 0x53, 0x0d,
	0xe7, 0xae, 0xdf, 0xd5, 0x95, 0x60, 0x43, 0x86, 0x31, 0x01, 0xd0, 0x18, 0xbc, 0x91, 0xb5, 0x68,
	0x2e, 0xc3, 0xe5, 0x9e, 0x7e, 0x01, 0x50, 0xef, 0x8f, 0xe7, 0xde, 0xb2, 0x35, 0x4f, 0xc5, 0x15,
	0x76, 0xcf, 0xa5, 0x6a, 0xf7, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x3d, 0x7c, 0xa4, 0xe1, 0x00,
	0x00, 0x00,
}
