// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/bifrost/link/hold-open/config.proto

package link_holdopen_controller

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Config is the hold-open controller config.
type Config struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1092ad5d2c0276f, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Config)(nil), "link.holdopen.controller.Config")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/bifrost/link/hold-open/config.proto", fileDescriptor_a1092ad5d2c0276f)
}

var fileDescriptor_a1092ad5d2c0276f = []byte{
	// 115 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x1c, 0xca, 0x31, 0x0e, 0xc2, 0x30,
	0x0c, 0x05, 0xd0, 0xad, 0x42, 0x1d, 0x99, 0x98, 0xd9, 0x89, 0x07, 0x0e, 0xc0, 0xc0, 0x49, 0x88,
	0x71, 0x5b, 0x0b, 0xe3, 0x1f, 0xb9, 0xee, 0xfd, 0xab, 0x64, 0x7e, 0x6f, 0x7e, 0xad, 0x9a, 0xdb,
	0x51, 0x0b, 0xe3, 0x4f, 0x9f, 0x26, 0x91, 0x47, 0x48, 0xa0, 0x22, 0x95, 0x77, 0xaa, 0xba, 0x04,
	0xf6, 0x24, 0x53, 0xff, 0xd1, 0x06, 0xfb, 0x3e, 0xd0, 0xc4, 0x89, 0xe1, 0x8b, 0xae, 0xa5, 0x05,
	0x12, 0xd7, 0x5b, 0xc7, 0xd2, 0xb1, 0x5b, 0x61, 0x78, 0x06, 0xcc, 0x24, 0xee, 0x97, 0x79, 0x7a,
	0x8f, 0x59, 0xa7, 0x51, 0x9f, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x51, 0x1e, 0x4b, 0x87, 0x6d,
	0x00, 0x00, 0x00,
}
