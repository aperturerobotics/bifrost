// @generated by protoc-gen-es v1.9.0 with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/bifrost/hash/hash.proto (package hash, syntax proto3)
/* eslint-disable */

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf'
import { Message, proto3 } from '@bufbuild/protobuf'

/**
 * HashType identifies the hash type in use.
 *
 * @generated from enum hash.HashType
 */
export enum HashType {
  /**
   * HashType_UNKNOWN is an unknown hash type.
   *
   * @generated from enum value: HashType_UNKNOWN = 0;
   */
  HashType_UNKNOWN = 0,

  /**
   * HashType_SHA256 is the sha256 hash type.
   *
   * @generated from enum value: HashType_SHA256 = 1;
   */
  HashType_SHA256 = 1,

  /**
   * HashType_SHA1 is the sha1 hash type.
   * NOTE: Do not use SHA1 unless you absolutely have to for backwards compat! (Git)
   *
   * @generated from enum value: HashType_SHA1 = 2;
   */
  HashType_SHA1 = 2,

  /**
   * HashType_BLAKE3 is the blake3 hash type.
   * Uses a 32-byte digest size.
   *
   * @generated from enum value: HashType_BLAKE3 = 3;
   */
  HashType_BLAKE3 = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(HashType)
proto3.util.setEnumType(HashType, 'hash.HashType', [
  { no: 0, name: 'HashType_UNKNOWN' },
  { no: 1, name: 'HashType_SHA256' },
  { no: 2, name: 'HashType_SHA1' },
  { no: 3, name: 'HashType_BLAKE3' },
])

/**
 * Hash is a hash of a binary blob.
 *
 * @generated from message hash.Hash
 */
export class Hash extends Message<Hash> {
  /**
   * HashType is the hash type in use.
   *
   * @generated from field: hash.HashType hash_type = 1;
   */
  hashType = HashType.HashType_UNKNOWN

  /**
   * Hash is the hash value.
   *
   * @generated from field: bytes hash = 2;
   */
  hash = new Uint8Array(0)

  constructor(data?: PartialMessage<Hash>) {
    super()
    proto3.util.initPartial(data, this)
  }

  static readonly runtime: typeof proto3 = proto3
  static readonly typeName = 'hash.Hash'
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'hash_type', kind: 'enum', T: proto3.getEnumType(HashType) },
    { no: 2, name: 'hash', kind: 'scalar', T: 12 /* ScalarType.BYTES */ },
  ])

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): Hash {
    return new Hash().fromBinary(bytes, options)
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): Hash {
    return new Hash().fromJson(jsonValue, options)
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): Hash {
    return new Hash().fromJsonString(jsonString, options)
  }

  static equals(
    a: Hash | PlainMessage<Hash> | undefined,
    b: Hash | PlainMessage<Hash> | undefined,
  ): boolean {
    return proto3.util.equals(Hash, a, b)
  }
}
