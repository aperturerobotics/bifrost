syntax = "proto3";
package peer.api;

import "github.com/aperturerobotics/bifrost/peer/controller/config.proto";
import "github.com/aperturerobotics/controllerbus/controller/exec/exec.proto";

// IdentifyRequest is a request to load an identity.
message IdentifyRequest {
  // Config is the request to configure the peer controller.
  .peer.controller.Config config = 1;
}

// IdentifyResponse is a response to an identify request.
message IdentifyResponse {
  // ControllerStatus is the status of the peer controller.
  .controller.exec.ControllerStatus controller_status = 1;
}

// GetPeerInfoRequest is the request type for GetPeerInfo.
message GetPeerInfoRequest {
  // PeerId restricts the response to a specific peer ID.
  string peer_id = 1;
}

// PeerInfo is basic information about a peer.
message PeerInfo {
  // PeerId is the b58 peer ID.
  string peer_id = 1;
}

// GetPeerInfoResponse is the response type for GetPeerInfo.
message GetPeerInfoResponse {
  // LocalPeers is the set of peers loaded.
  repeated PeerInfo local_peers = 1;
}

// PeerService implements a bifrost peer service.
service PeerService {
  // Identify loads and manages a private key identity.
  rpc Identify(IdentifyRequest) returns (stream IdentifyResponse) {}
  // GetPeerInfo returns information about attached peers.
  rpc GetPeerInfo(GetPeerInfoRequest) returns (GetPeerInfoResponse) {}
}