// @generated by protoc-gen-es-lite unknown with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/bifrost/peer/controller/config.proto (package peer.controller, syntax proto3)
/* eslint-disable */

import {
  createMessageType,
  Message,
  MessageType,
  PartialFieldInfo,
} from '@aptre/protobuf-es-lite'

export const protobufPackage = 'peer.controller'

/**
 * Config is the peer controller config.
 *
 * @generated from message peer.controller.Config
 */
export interface Config extends Message<Config> {
  /**
   * PrivKey is the peer private key in either b58 or PEM format.
   * See confparse.MarshalPrivateKey.
   * If not set, the peer private key will be unavailable.
   *
   * @generated from field: string priv_key = 1;
   */
  privKey?: string
  /**
   * PubKey is the peer public key.
   * Ignored if priv_key is set.
   *
   * @generated from field: string pub_key = 2;
   */
  pubKey?: string
  /**
   * PeerId is the peer identifier.
   * Ignored if priv_key or pub_key are set.
   * The peer ID should contain the public key.
   *
   * @generated from field: string peer_id = 3;
   */
  peerId?: string
}

export const Config: MessageType<Config> = createMessageType({
  typeName: 'peer.controller.Config',
  fields: [
    { no: 1, name: 'priv_key', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'pub_key', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 3, name: 'peer_id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
  ] as readonly PartialFieldInfo[],
  packedByDefault: true,
})
