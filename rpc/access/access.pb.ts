// @generated by protoc-gen-es-lite unknown with parameter "target=ts,ts_nocheck=false"
// @generated from file github.com/aperturerobotics/bifrost/rpc/access/access.proto (package bifrost.rpc.access, syntax proto3)
/* eslint-disable */

import type { MessageType, PartialFieldInfo } from '@aptre/protobuf-es-lite'
import { createMessageType, Message, ScalarType } from '@aptre/protobuf-es-lite'

export const protobufPackage = 'bifrost.rpc.access'

/**
 * LookupRpcServiceRequest is a request to lookup an rpc service.
 *
 * @generated from message bifrost.rpc.access.LookupRpcServiceRequest
 */
export type LookupRpcServiceRequest = Message<{
  /**
   * ServiceId is the service identifier.
   *
   * @generated from field: string service_id = 1;
   */
  serviceId?: string
  /**
   * ServerId is the identifier of the server requesting the service.
   * Can be empty.
   *
   * @generated from field: string server_id = 2;
   */
  serverId?: string
}>

// LookupRpcServiceRequest contains the message type declaration for LookupRpcServiceRequest.
export const LookupRpcServiceRequest: MessageType<LookupRpcServiceRequest> =
  createMessageType({
    typeName: 'bifrost.rpc.access.LookupRpcServiceRequest',
    fields: [
      { no: 1, name: 'service_id', kind: 'scalar', T: ScalarType.STRING },
      { no: 2, name: 'server_id', kind: 'scalar', T: ScalarType.STRING },
    ] as readonly PartialFieldInfo[],
    packedByDefault: true,
  })

/**
 * LookupRpcServiceResponse is a response to LookupRpcService
 *
 * @generated from message bifrost.rpc.access.LookupRpcServiceResponse
 */
export type LookupRpcServiceResponse = Message<{
  /**
   * Idle indicates the directive is now idle.
   *
   * @generated from field: bool idle = 1;
   */
  idle?: boolean
  /**
   * Exists indicates we found the service on the remote.
   *
   * @generated from field: bool exists = 2;
   */
  exists?: boolean
  /**
   * Removed indicates the value no longer exists.
   *
   * @generated from field: bool removed = 3;
   */
  removed?: boolean
}>

// LookupRpcServiceResponse contains the message type declaration for LookupRpcServiceResponse.
export const LookupRpcServiceResponse: MessageType<LookupRpcServiceResponse> =
  createMessageType({
    typeName: 'bifrost.rpc.access.LookupRpcServiceResponse',
    fields: [
      { no: 1, name: 'idle', kind: 'scalar', T: ScalarType.BOOL },
      { no: 2, name: 'exists', kind: 'scalar', T: ScalarType.BOOL },
      { no: 3, name: 'removed', kind: 'scalar', T: ScalarType.BOOL },
    ] as readonly PartialFieldInfo[],
    packedByDefault: true,
  })
